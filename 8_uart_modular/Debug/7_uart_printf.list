
7_uart_printf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001498  08000200  08000200  00010200  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08001698  08001698  00011698  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800174c  0800174c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800174c  0800174c  0001174c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001750  08001750  00011750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001754  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080017b8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080017b8  00020094  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000fe3  00000000  00000000  00020092  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000479  00000000  00000000  00021075  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  000214f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000140  00000000  00000000  00021668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001eb52  00000000  00000000  000217a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001525  00000000  00000000  000402fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a8bd5  00000000  00000000  0004181f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ea3f4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d2c  00000000  00000000  000ea444  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000200 <__do_global_dtors_aux>:
 8000200:	b510      	push	{r4, lr}
 8000202:	4c05      	ldr	r4, [pc, #20]	; (8000218 <__do_global_dtors_aux+0x18>)
 8000204:	7823      	ldrb	r3, [r4, #0]
 8000206:	b933      	cbnz	r3, 8000216 <__do_global_dtors_aux+0x16>
 8000208:	4b04      	ldr	r3, [pc, #16]	; (800021c <__do_global_dtors_aux+0x1c>)
 800020a:	b113      	cbz	r3, 8000212 <__do_global_dtors_aux+0x12>
 800020c:	4804      	ldr	r0, [pc, #16]	; (8000220 <__do_global_dtors_aux+0x20>)
 800020e:	f3af 8000 	nop.w
 8000212:	2301      	movs	r3, #1
 8000214:	7023      	strb	r3, [r4, #0]
 8000216:	bd10      	pop	{r4, pc}
 8000218:	20000064 	.word	0x20000064
 800021c:	00000000 	.word	0x00000000
 8000220:	08001680 	.word	0x08001680

08000224 <frame_dummy>:
 8000224:	b508      	push	{r3, lr}
 8000226:	4b03      	ldr	r3, [pc, #12]	; (8000234 <frame_dummy+0x10>)
 8000228:	b11b      	cbz	r3, 8000232 <frame_dummy+0xe>
 800022a:	4903      	ldr	r1, [pc, #12]	; (8000238 <frame_dummy+0x14>)
 800022c:	4803      	ldr	r0, [pc, #12]	; (800023c <frame_dummy+0x18>)
 800022e:	f3af 8000 	nop.w
 8000232:	bd08      	pop	{r3, pc}
 8000234:	00000000 	.word	0x00000000
 8000238:	20000068 	.word	0x20000068
 800023c:	08001680 	.word	0x08001680

08000240 <memchr>:
 8000240:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000244:	2a10      	cmp	r2, #16
 8000246:	db2b      	blt.n	80002a0 <memchr+0x60>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	d008      	beq.n	8000260 <memchr+0x20>
 800024e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000252:	3a01      	subs	r2, #1
 8000254:	428b      	cmp	r3, r1
 8000256:	d02d      	beq.n	80002b4 <memchr+0x74>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	b342      	cbz	r2, 80002b0 <memchr+0x70>
 800025e:	d1f6      	bne.n	800024e <memchr+0xe>
 8000260:	b4f0      	push	{r4, r5, r6, r7}
 8000262:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000266:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800026a:	f022 0407 	bic.w	r4, r2, #7
 800026e:	f07f 0700 	mvns.w	r7, #0
 8000272:	2300      	movs	r3, #0
 8000274:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000278:	3c08      	subs	r4, #8
 800027a:	ea85 0501 	eor.w	r5, r5, r1
 800027e:	ea86 0601 	eor.w	r6, r6, r1
 8000282:	fa85 f547 	uadd8	r5, r5, r7
 8000286:	faa3 f587 	sel	r5, r3, r7
 800028a:	fa86 f647 	uadd8	r6, r6, r7
 800028e:	faa5 f687 	sel	r6, r5, r7
 8000292:	b98e      	cbnz	r6, 80002b8 <memchr+0x78>
 8000294:	d1ee      	bne.n	8000274 <memchr+0x34>
 8000296:	bcf0      	pop	{r4, r5, r6, r7}
 8000298:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800029c:	f002 0207 	and.w	r2, r2, #7
 80002a0:	b132      	cbz	r2, 80002b0 <memchr+0x70>
 80002a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002a6:	3a01      	subs	r2, #1
 80002a8:	ea83 0301 	eor.w	r3, r3, r1
 80002ac:	b113      	cbz	r3, 80002b4 <memchr+0x74>
 80002ae:	d1f8      	bne.n	80002a2 <memchr+0x62>
 80002b0:	2000      	movs	r0, #0
 80002b2:	4770      	bx	lr
 80002b4:	3801      	subs	r0, #1
 80002b6:	4770      	bx	lr
 80002b8:	2d00      	cmp	r5, #0
 80002ba:	bf06      	itte	eq
 80002bc:	4635      	moveq	r5, r6
 80002be:	3803      	subeq	r0, #3
 80002c0:	3807      	subne	r0, #7
 80002c2:	f015 0f01 	tst.w	r5, #1
 80002c6:	d107      	bne.n	80002d8 <memchr+0x98>
 80002c8:	3001      	adds	r0, #1
 80002ca:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ce:	bf02      	ittt	eq
 80002d0:	3001      	addeq	r0, #1
 80002d2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002d6:	3001      	addeq	r0, #1
 80002d8:	bcf0      	pop	{r4, r5, r6, r7}
 80002da:	3801      	subs	r0, #1
 80002dc:	4770      	bx	lr
 80002de:	bf00      	nop

080002e0 <__io_putchar>:
void uart_write(USART_TypeDef *USARTx, uint8_t value);
void uart3_tx_init(void);
void set_uart_transfer_direction(USART_TypeDef *USARTx, uint32_t TransferDirection);

int __io_putchar(int ch)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	b082      	sub	sp, #8
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
  uart_write(USART3, ch);
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	b2db      	uxtb	r3, r3
 80002ec:	4619      	mov	r1, r3
 80002ee:	4804      	ldr	r0, [pc, #16]	; (8000300 <__io_putchar+0x20>)
 80002f0:	f000 f822 	bl	8000338 <uart_write>
  return ch;
 80002f4:	687b      	ldr	r3, [r7, #4]
}
 80002f6:	4618      	mov	r0, r3
 80002f8:	3708      	adds	r7, #8
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}
 80002fe:	bf00      	nop
 8000300:	40004800 	.word	0x40004800

08000304 <main>:

int main(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b082      	sub	sp, #8
 8000308:	af00      	add	r7, sp, #0
  int x;
  uart3_tx_init();
 800030a:	f000 f82b 	bl	8000364 <uart3_tx_init>


	while(1)
	{
    printf("Hello from STM32F7.....\n\r");
 800030e:	4809      	ldr	r0, [pc, #36]	; (8000334 <main+0x30>)
 8000310:	f000 fa28 	bl	8000764 <iprintf>
    for(int i=0;i<9000;i++)
 8000314:	2300      	movs	r3, #0
 8000316:	603b      	str	r3, [r7, #0]
 8000318:	e005      	b.n	8000326 <main+0x22>
    {
      x++;
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	3301      	adds	r3, #1
 800031e:	607b      	str	r3, [r7, #4]
    for(int i=0;i<9000;i++)
 8000320:	683b      	ldr	r3, [r7, #0]
 8000322:	3301      	adds	r3, #1
 8000324:	603b      	str	r3, [r7, #0]
 8000326:	683b      	ldr	r3, [r7, #0]
 8000328:	f242 3227 	movw	r2, #8999	; 0x2327
 800032c:	4293      	cmp	r3, r2
 800032e:	ddf4      	ble.n	800031a <main+0x16>
    printf("Hello from STM32F7.....\n\r");
 8000330:	e7ed      	b.n	800030e <main+0xa>
 8000332:	bf00      	nop
 8000334:	08001698 	.word	0x08001698

08000338 <uart_write>:
}



void uart_write(USART_TypeDef *USARTx, uint8_t value)
{
 8000338:	b480      	push	{r7}
 800033a:	b083      	sub	sp, #12
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
 8000340:	460b      	mov	r3, r1
 8000342:	70fb      	strb	r3, [r7, #3]
  // Make sure transmit data register is empty
  while (!((USARTx->ISR & USART_ISR_TXE) == USART_ISR_TXE)){}
 8000344:	bf00      	nop
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	69db      	ldr	r3, [r3, #28]
 800034a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800034e:	2b80      	cmp	r3, #128	; 0x80
 8000350:	d1f9      	bne.n	8000346 <uart_write+0xe>
  /*while (!(USARTx->ISR & USART_ISR_TXE)){}*/

  // Write value into transmit data register
  USARTx->TDR = value;
 8000352:	78fa      	ldrb	r2, [r7, #3]
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	629a      	str	r2, [r3, #40]	; 0x28
}
 8000358:	bf00      	nop
 800035a:	370c      	adds	r7, #12
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr

08000364 <uart3_tx_init>:

void uart3_tx_init(void)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	af00      	add	r7, sp, #0
	// 1.Enable clock access to GPIOD
	set_ahb1_periph_clock(GPIODEN);
 8000368:	2008      	movs	r0, #8
 800036a:	f000 f895 	bl	8000498 <set_ahb1_periph_clock>

	// 2.Set PD8 to mode to alternate function
	set_pin_mode(GPIOD, UART3_TX, GPIO_ALTERNATE_MODE);
 800036e:	2202      	movs	r2, #2
 8000370:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000374:	4819      	ldr	r0, [pc, #100]	; (80003dc <uart3_tx_init+0x78>)
 8000376:	f000 f8b3 	bl	80004e0 <set_pin_mode>

	// 3. Set alternate function to USART
	GPIOD->AFR[1] |= (1U<<0);
 800037a:	4b18      	ldr	r3, [pc, #96]	; (80003dc <uart3_tx_init+0x78>)
 800037c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800037e:	4a17      	ldr	r2, [pc, #92]	; (80003dc <uart3_tx_init+0x78>)
 8000380:	f043 0301 	orr.w	r3, r3, #1
 8000384:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |= (1U<<1);
 8000386:	4b15      	ldr	r3, [pc, #84]	; (80003dc <uart3_tx_init+0x78>)
 8000388:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800038a:	4a14      	ldr	r2, [pc, #80]	; (80003dc <uart3_tx_init+0x78>)
 800038c:	f043 0302 	orr.w	r3, r3, #2
 8000390:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |= (1U<<2);
 8000392:	4b12      	ldr	r3, [pc, #72]	; (80003dc <uart3_tx_init+0x78>)
 8000394:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000396:	4a11      	ldr	r2, [pc, #68]	; (80003dc <uart3_tx_init+0x78>)
 8000398:	f043 0304 	orr.w	r3, r3, #4
 800039c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] &=~ (1U<<3);
 800039e:	4b0f      	ldr	r3, [pc, #60]	; (80003dc <uart3_tx_init+0x78>)
 80003a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80003a2:	4a0e      	ldr	r2, [pc, #56]	; (80003dc <uart3_tx_init+0x78>)
 80003a4:	f023 0308 	bic.w	r3, r3, #8
 80003a8:	6253      	str	r3, [r2, #36]	; 0x24

	// Enable clock to the USART3 module
	set_apb1_periph_clock(USART3EN);
 80003aa:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80003ae:	f000 f885 	bl	80004bc <set_apb1_periph_clock>

	// Configure USART parameters
	config_uart_parameters(USART3, UART_DATAWIDTH_8B, UART_PARITY_NONE, UART_STOPBITS_1);
 80003b2:	2300      	movs	r3, #0
 80003b4:	2200      	movs	r2, #0
 80003b6:	2100      	movs	r1, #0
 80003b8:	4809      	ldr	r0, [pc, #36]	; (80003e0 <uart3_tx_init+0x7c>)
 80003ba:	f000 f84b 	bl	8000454 <config_uart_parameters>
  set_uart_transfer_direction(USART3, USART_CR1_TE);
 80003be:	2108      	movs	r1, #8
 80003c0:	4807      	ldr	r0, [pc, #28]	; (80003e0 <uart3_tx_init+0x7c>)
 80003c2:	f000 f821 	bl	8000408 <set_uart_transfer_direction>

	// Set baudrate
  uart_set_baudrate(USART3, 16000000, 115200);
 80003c6:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80003ca:	4906      	ldr	r1, [pc, #24]	; (80003e4 <uart3_tx_init+0x80>)
 80003cc:	4804      	ldr	r0, [pc, #16]	; (80003e0 <uart3_tx_init+0x7c>)
 80003ce:	f000 f82e 	bl	800042e <uart_set_baudrate>

	// Enable USART
  /*USART3->CR1 |= USART_CR1_UE;*/
  // SET_BIT(USART3->CR1, USART_CR1_UE);
  uart_enable(USART3);
 80003d2:	4803      	ldr	r0, [pc, #12]	; (80003e0 <uart3_tx_init+0x7c>)
 80003d4:	f000 f808 	bl	80003e8 <uart_enable>
}
 80003d8:	bf00      	nop
 80003da:	bd80      	pop	{r7, pc}
 80003dc:	40020c00 	.word	0x40020c00
 80003e0:	40004800 	.word	0x40004800
 80003e4:	00f42400 	.word	0x00f42400

080003e8 <uart_enable>:


void uart_enable(USART_TypeDef *USARTx)
{
 80003e8:	b480      	push	{r7}
 80003ea:	b083      	sub	sp, #12
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
  SET_BIT(USARTx->CR1, USART_CR1_UE);
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f043 0201 	orr.w	r2, r3, #1
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	601a      	str	r2, [r3, #0]
}
 80003fc:	bf00      	nop
 80003fe:	370c      	adds	r7, #12
 8000400:	46bd      	mov	sp, r7
 8000402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000406:	4770      	bx	lr

08000408 <set_uart_transfer_direction>:

void set_uart_transfer_direction(USART_TypeDef *USARTx, uint32_t TransferDirection)
{
 8000408:	b480      	push	{r7}
 800040a:	b083      	sub	sp, #12
 800040c:	af00      	add	r7, sp, #0
 800040e:	6078      	str	r0, [r7, #4]
 8000410:	6039      	str	r1, [r7, #0]
  MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	f023 020c 	bic.w	r2, r3, #12
 800041a:	683b      	ldr	r3, [r7, #0]
 800041c:	431a      	orrs	r2, r3
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	601a      	str	r2, [r3, #0]
}
 8000422:	bf00      	nop
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042c:	4770      	bx	lr

0800042e <uart_set_baudrate>:

void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 800042e:	b580      	push	{r7, lr}
 8000430:	b084      	sub	sp, #16
 8000432:	af00      	add	r7, sp, #0
 8000434:	60f8      	str	r0, [r7, #12]
 8000436:	60b9      	str	r1, [r7, #8]
 8000438:	607a      	str	r2, [r7, #4]
  USARTx->BRR = compute_uart_div(PeriphClk, BaudRate);
 800043a:	6879      	ldr	r1, [r7, #4]
 800043c:	68b8      	ldr	r0, [r7, #8]
 800043e:	f000 f87e 	bl	800053e <compute_uart_div>
 8000442:	4603      	mov	r3, r0
 8000444:	461a      	mov	r2, r3
 8000446:	68fb      	ldr	r3, [r7, #12]
 8000448:	60da      	str	r2, [r3, #12]
}
 800044a:	bf00      	nop
 800044c:	3710      	adds	r7, #16
 800044e:	46bd      	mov	sp, r7
 8000450:	bd80      	pop	{r7, pc}
	...

08000454 <config_uart_parameters>:

void config_uart_parameters(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t Parity, uint32_t StopBits)
{
 8000454:	b480      	push	{r7}
 8000456:	b085      	sub	sp, #20
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
 8000460:	603b      	str	r3, [r7, #0]
	MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 8000462:	68fb      	ldr	r3, [r7, #12]
 8000464:	681a      	ldr	r2, [r3, #0]
 8000466:	4b0b      	ldr	r3, [pc, #44]	; (8000494 <config_uart_parameters+0x40>)
 8000468:	4013      	ands	r3, r2
 800046a:	6879      	ldr	r1, [r7, #4]
 800046c:	68ba      	ldr	r2, [r7, #8]
 800046e:	430a      	orrs	r2, r1
 8000470:	431a      	orrs	r2, r3
 8000472:	68fb      	ldr	r3, [r7, #12]
 8000474:	601a      	str	r2, [r3, #0]

	MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 8000476:	68fb      	ldr	r3, [r7, #12]
 8000478:	685b      	ldr	r3, [r3, #4]
 800047a:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800047e:	683b      	ldr	r3, [r7, #0]
 8000480:	431a      	orrs	r2, r3
 8000482:	68fb      	ldr	r3, [r7, #12]
 8000484:	605a      	str	r2, [r3, #4]
}
 8000486:	bf00      	nop
 8000488:	3714      	adds	r7, #20
 800048a:	46bd      	mov	sp, r7
 800048c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000490:	4770      	bx	lr
 8000492:	bf00      	nop
 8000494:	efffe9ff 	.word	0xefffe9ff

08000498 <set_ahb1_periph_clock>:

void set_ahb1_periph_clock(uint32_t periphs)
{
 8000498:	b480      	push	{r7}
 800049a:	b083      	sub	sp, #12
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
	SET_BIT(RCC->AHB1ENR, periphs);
 80004a0:	4b05      	ldr	r3, [pc, #20]	; (80004b8 <set_ahb1_periph_clock+0x20>)
 80004a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80004a4:	4904      	ldr	r1, [pc, #16]	; (80004b8 <set_ahb1_periph_clock+0x20>)
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4313      	orrs	r3, r2
 80004aa:	630b      	str	r3, [r1, #48]	; 0x30
}
 80004ac:	bf00      	nop
 80004ae:	370c      	adds	r7, #12
 80004b0:	46bd      	mov	sp, r7
 80004b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b6:	4770      	bx	lr
 80004b8:	40023800 	.word	0x40023800

080004bc <set_apb1_periph_clock>:
{
	SET_BIT(RCC->AHB2ENR, periphs);
}

void set_apb1_periph_clock(uint32_t periphs)
{
 80004bc:	b480      	push	{r7}
 80004be:	b083      	sub	sp, #12
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	6078      	str	r0, [r7, #4]
	SET_BIT(RCC->APB1ENR, periphs);
 80004c4:	4b05      	ldr	r3, [pc, #20]	; (80004dc <set_apb1_periph_clock+0x20>)
 80004c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80004c8:	4904      	ldr	r1, [pc, #16]	; (80004dc <set_apb1_periph_clock+0x20>)
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	4313      	orrs	r3, r2
 80004ce:	640b      	str	r3, [r1, #64]	; 0x40
}
 80004d0:	bf00      	nop
 80004d2:	370c      	adds	r7, #12
 80004d4:	46bd      	mov	sp, r7
 80004d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004da:	4770      	bx	lr
 80004dc:	40023800 	.word	0x40023800

080004e0 <set_pin_mode>:
{
	SET_BIT(RCC->APB1ENR, periphs);
}

void set_pin_mode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
{
 80004e0:	b480      	push	{r7}
 80004e2:	b089      	sub	sp, #36	; 0x24
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	60f8      	str	r0, [r7, #12]
 80004e8:	60b9      	str	r1, [r7, #8]
 80004ea:	607a      	str	r2, [r7, #4]
	 *
	 * Mode = 0b10 = 0x2
	 * 2 << 16 ==> bit16 = 0, bit17 = 1
	 * */

	MODIFY_REG(GPIOx->MODER, (0x3<<(POSITION_VAL(Pin)*2U)), (Mode<<(POSITION_VAL(Pin)*2U)));
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	68ba      	ldr	r2, [r7, #8]
 80004f2:	617a      	str	r2, [r7, #20]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80004f4:	697a      	ldr	r2, [r7, #20]
 80004f6:	fa92 f2a2 	rbit	r2, r2
 80004fa:	613a      	str	r2, [r7, #16]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 80004fc:	693a      	ldr	r2, [r7, #16]
 80004fe:	fab2 f282 	clz	r2, r2
 8000502:	b2d2      	uxtb	r2, r2
 8000504:	0052      	lsls	r2, r2, #1
 8000506:	2103      	movs	r1, #3
 8000508:	fa01 f202 	lsl.w	r2, r1, r2
 800050c:	43d2      	mvns	r2, r2
 800050e:	401a      	ands	r2, r3
 8000510:	68bb      	ldr	r3, [r7, #8]
 8000512:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8000514:	69fb      	ldr	r3, [r7, #28]
 8000516:	fa93 f3a3 	rbit	r3, r3
 800051a:	61bb      	str	r3, [r7, #24]
  return result;
 800051c:	69bb      	ldr	r3, [r7, #24]
 800051e:	fab3 f383 	clz	r3, r3
 8000522:	b2db      	uxtb	r3, r3
 8000524:	005b      	lsls	r3, r3, #1
 8000526:	6879      	ldr	r1, [r7, #4]
 8000528:	fa01 f303 	lsl.w	r3, r1, r3
 800052c:	431a      	orrs	r2, r3
 800052e:	68fb      	ldr	r3, [r7, #12]
 8000530:	601a      	str	r2, [r3, #0]
}
 8000532:	bf00      	nop
 8000534:	3724      	adds	r7, #36	; 0x24
 8000536:	46bd      	mov	sp, r7
 8000538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053c:	4770      	bx	lr

0800053e <compute_uart_div>:

uint16_t compute_uart_div(uint32_t PeriphClk, uint32_t BaudRate)
{
 800053e:	b480      	push	{r7}
 8000540:	b083      	sub	sp, #12
 8000542:	af00      	add	r7, sp, #0
 8000544:	6078      	str	r0, [r7, #4]
 8000546:	6039      	str	r1, [r7, #0]
  return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000548:	683b      	ldr	r3, [r7, #0]
 800054a:	085a      	lsrs	r2, r3, #1
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	441a      	add	r2, r3
 8000550:	683b      	ldr	r3, [r7, #0]
 8000552:	fbb2 f3f3 	udiv	r3, r2, r3
 8000556:	b29b      	uxth	r3, r3
}
 8000558:	4618      	mov	r0, r3
 800055a:	370c      	adds	r7, #12
 800055c:	46bd      	mov	sp, r7
 800055e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000562:	4770      	bx	lr

08000564 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000564:	b580      	push	{r7, lr}
 8000566:	b086      	sub	sp, #24
 8000568:	af00      	add	r7, sp, #0
 800056a:	60f8      	str	r0, [r7, #12]
 800056c:	60b9      	str	r1, [r7, #8]
 800056e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000570:	2300      	movs	r3, #0
 8000572:	617b      	str	r3, [r7, #20]
 8000574:	e00a      	b.n	800058c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000576:	f3af 8000 	nop.w
 800057a:	4601      	mov	r1, r0
 800057c:	68bb      	ldr	r3, [r7, #8]
 800057e:	1c5a      	adds	r2, r3, #1
 8000580:	60ba      	str	r2, [r7, #8]
 8000582:	b2ca      	uxtb	r2, r1
 8000584:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000586:	697b      	ldr	r3, [r7, #20]
 8000588:	3301      	adds	r3, #1
 800058a:	617b      	str	r3, [r7, #20]
 800058c:	697a      	ldr	r2, [r7, #20]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	429a      	cmp	r2, r3
 8000592:	dbf0      	blt.n	8000576 <_read+0x12>
  }

  return len;
 8000594:	687b      	ldr	r3, [r7, #4]
}
 8000596:	4618      	mov	r0, r3
 8000598:	3718      	adds	r7, #24
 800059a:	46bd      	mov	sp, r7
 800059c:	bd80      	pop	{r7, pc}

0800059e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800059e:	b580      	push	{r7, lr}
 80005a0:	b086      	sub	sp, #24
 80005a2:	af00      	add	r7, sp, #0
 80005a4:	60f8      	str	r0, [r7, #12]
 80005a6:	60b9      	str	r1, [r7, #8]
 80005a8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005aa:	2300      	movs	r3, #0
 80005ac:	617b      	str	r3, [r7, #20]
 80005ae:	e009      	b.n	80005c4 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80005b0:	68bb      	ldr	r3, [r7, #8]
 80005b2:	1c5a      	adds	r2, r3, #1
 80005b4:	60ba      	str	r2, [r7, #8]
 80005b6:	781b      	ldrb	r3, [r3, #0]
 80005b8:	4618      	mov	r0, r3
 80005ba:	f7ff fe91 	bl	80002e0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005be:	697b      	ldr	r3, [r7, #20]
 80005c0:	3301      	adds	r3, #1
 80005c2:	617b      	str	r3, [r7, #20]
 80005c4:	697a      	ldr	r2, [r7, #20]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	429a      	cmp	r2, r3
 80005ca:	dbf1      	blt.n	80005b0 <_write+0x12>
  }
  return len;
 80005cc:	687b      	ldr	r3, [r7, #4]
}
 80005ce:	4618      	mov	r0, r3
 80005d0:	3718      	adds	r7, #24
 80005d2:	46bd      	mov	sp, r7
 80005d4:	bd80      	pop	{r7, pc}

080005d6 <_close>:

int _close(int file)
{
 80005d6:	b480      	push	{r7}
 80005d8:	b083      	sub	sp, #12
 80005da:	af00      	add	r7, sp, #0
 80005dc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80005de:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80005e2:	4618      	mov	r0, r3
 80005e4:	370c      	adds	r7, #12
 80005e6:	46bd      	mov	sp, r7
 80005e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ec:	4770      	bx	lr

080005ee <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005ee:	b480      	push	{r7}
 80005f0:	b083      	sub	sp, #12
 80005f2:	af00      	add	r7, sp, #0
 80005f4:	6078      	str	r0, [r7, #4]
 80005f6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80005f8:	683b      	ldr	r3, [r7, #0]
 80005fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005fe:	605a      	str	r2, [r3, #4]
  return 0;
 8000600:	2300      	movs	r3, #0
}
 8000602:	4618      	mov	r0, r3
 8000604:	370c      	adds	r7, #12
 8000606:	46bd      	mov	sp, r7
 8000608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060c:	4770      	bx	lr

0800060e <_isatty>:

int _isatty(int file)
{
 800060e:	b480      	push	{r7}
 8000610:	b083      	sub	sp, #12
 8000612:	af00      	add	r7, sp, #0
 8000614:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000616:	2301      	movs	r3, #1
}
 8000618:	4618      	mov	r0, r3
 800061a:	370c      	adds	r7, #12
 800061c:	46bd      	mov	sp, r7
 800061e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000622:	4770      	bx	lr

08000624 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000624:	b480      	push	{r7}
 8000626:	b085      	sub	sp, #20
 8000628:	af00      	add	r7, sp, #0
 800062a:	60f8      	str	r0, [r7, #12]
 800062c:	60b9      	str	r1, [r7, #8]
 800062e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000630:	2300      	movs	r3, #0
}
 8000632:	4618      	mov	r0, r3
 8000634:	3714      	adds	r7, #20
 8000636:	46bd      	mov	sp, r7
 8000638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063c:	4770      	bx	lr
	...

08000640 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000640:	b580      	push	{r7, lr}
 8000642:	b086      	sub	sp, #24
 8000644:	af00      	add	r7, sp, #0
 8000646:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000648:	4a14      	ldr	r2, [pc, #80]	; (800069c <_sbrk+0x5c>)
 800064a:	4b15      	ldr	r3, [pc, #84]	; (80006a0 <_sbrk+0x60>)
 800064c:	1ad3      	subs	r3, r2, r3
 800064e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000650:	697b      	ldr	r3, [r7, #20]
 8000652:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000654:	4b13      	ldr	r3, [pc, #76]	; (80006a4 <_sbrk+0x64>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	2b00      	cmp	r3, #0
 800065a:	d102      	bne.n	8000662 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800065c:	4b11      	ldr	r3, [pc, #68]	; (80006a4 <_sbrk+0x64>)
 800065e:	4a12      	ldr	r2, [pc, #72]	; (80006a8 <_sbrk+0x68>)
 8000660:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000662:	4b10      	ldr	r3, [pc, #64]	; (80006a4 <_sbrk+0x64>)
 8000664:	681a      	ldr	r2, [r3, #0]
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4413      	add	r3, r2
 800066a:	693a      	ldr	r2, [r7, #16]
 800066c:	429a      	cmp	r2, r3
 800066e:	d207      	bcs.n	8000680 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000670:	f000 f846 	bl	8000700 <__errno>
 8000674:	4603      	mov	r3, r0
 8000676:	220c      	movs	r2, #12
 8000678:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800067a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800067e:	e009      	b.n	8000694 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000680:	4b08      	ldr	r3, [pc, #32]	; (80006a4 <_sbrk+0x64>)
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000686:	4b07      	ldr	r3, [pc, #28]	; (80006a4 <_sbrk+0x64>)
 8000688:	681a      	ldr	r2, [r3, #0]
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	4413      	add	r3, r2
 800068e:	4a05      	ldr	r2, [pc, #20]	; (80006a4 <_sbrk+0x64>)
 8000690:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000692:	68fb      	ldr	r3, [r7, #12]
}
 8000694:	4618      	mov	r0, r3
 8000696:	3718      	adds	r7, #24
 8000698:	46bd      	mov	sp, r7
 800069a:	bd80      	pop	{r7, pc}
 800069c:	20080000 	.word	0x20080000
 80006a0:	00000400 	.word	0x00000400
 80006a4:	20000080 	.word	0x20000080
 80006a8:	20000098 	.word	0x20000098

080006ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ac:	480d      	ldr	r0, [pc, #52]	; (80006e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b4:	480c      	ldr	r0, [pc, #48]	; (80006e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80006b6:	490d      	ldr	r1, [pc, #52]	; (80006ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b8:	4a0d      	ldr	r2, [pc, #52]	; (80006f0 <LoopForever+0xe>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006bc:	e002      	b.n	80006c4 <LoopCopyDataInit>

080006be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006c2:	3304      	adds	r3, #4

080006c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006c8:	d3f9      	bcc.n	80006be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ca:	4a0a      	ldr	r2, [pc, #40]	; (80006f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006cc:	4c0a      	ldr	r4, [pc, #40]	; (80006f8 <LoopForever+0x16>)
  movs r3, #0
 80006ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006d0:	e001      	b.n	80006d6 <LoopFillZerobss>

080006d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d4:	3204      	adds	r2, #4

080006d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d8:	d3fb      	bcc.n	80006d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006da:	f000 f817 	bl	800070c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006de:	f7ff fe11 	bl	8000304 <main>

080006e2 <LoopForever>:

LoopForever:
  b LoopForever
 80006e2:	e7fe      	b.n	80006e2 <LoopForever>
  ldr   r0, =_estack
 80006e4:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 80006e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006ec:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80006f0:	08001754 	.word	0x08001754
  ldr r2, =_sbss
 80006f4:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80006f8:	20000094 	.word	0x20000094

080006fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006fc:	e7fe      	b.n	80006fc <ADC_IRQHandler>
	...

08000700 <__errno>:
 8000700:	4b01      	ldr	r3, [pc, #4]	; (8000708 <__errno+0x8>)
 8000702:	6818      	ldr	r0, [r3, #0]
 8000704:	4770      	bx	lr
 8000706:	bf00      	nop
 8000708:	20000000 	.word	0x20000000

0800070c <__libc_init_array>:
 800070c:	b570      	push	{r4, r5, r6, lr}
 800070e:	4d0d      	ldr	r5, [pc, #52]	; (8000744 <__libc_init_array+0x38>)
 8000710:	4c0d      	ldr	r4, [pc, #52]	; (8000748 <__libc_init_array+0x3c>)
 8000712:	1b64      	subs	r4, r4, r5
 8000714:	10a4      	asrs	r4, r4, #2
 8000716:	2600      	movs	r6, #0
 8000718:	42a6      	cmp	r6, r4
 800071a:	d109      	bne.n	8000730 <__libc_init_array+0x24>
 800071c:	4d0b      	ldr	r5, [pc, #44]	; (800074c <__libc_init_array+0x40>)
 800071e:	4c0c      	ldr	r4, [pc, #48]	; (8000750 <__libc_init_array+0x44>)
 8000720:	f000 ffae 	bl	8001680 <_init>
 8000724:	1b64      	subs	r4, r4, r5
 8000726:	10a4      	asrs	r4, r4, #2
 8000728:	2600      	movs	r6, #0
 800072a:	42a6      	cmp	r6, r4
 800072c:	d105      	bne.n	800073a <__libc_init_array+0x2e>
 800072e:	bd70      	pop	{r4, r5, r6, pc}
 8000730:	f855 3b04 	ldr.w	r3, [r5], #4
 8000734:	4798      	blx	r3
 8000736:	3601      	adds	r6, #1
 8000738:	e7ee      	b.n	8000718 <__libc_init_array+0xc>
 800073a:	f855 3b04 	ldr.w	r3, [r5], #4
 800073e:	4798      	blx	r3
 8000740:	3601      	adds	r6, #1
 8000742:	e7f2      	b.n	800072a <__libc_init_array+0x1e>
 8000744:	0800174c 	.word	0x0800174c
 8000748:	0800174c 	.word	0x0800174c
 800074c:	0800174c 	.word	0x0800174c
 8000750:	08001750 	.word	0x08001750

08000754 <memset>:
 8000754:	4402      	add	r2, r0
 8000756:	4603      	mov	r3, r0
 8000758:	4293      	cmp	r3, r2
 800075a:	d100      	bne.n	800075e <memset+0xa>
 800075c:	4770      	bx	lr
 800075e:	f803 1b01 	strb.w	r1, [r3], #1
 8000762:	e7f9      	b.n	8000758 <memset+0x4>

08000764 <iprintf>:
 8000764:	b40f      	push	{r0, r1, r2, r3}
 8000766:	4b0a      	ldr	r3, [pc, #40]	; (8000790 <iprintf+0x2c>)
 8000768:	b513      	push	{r0, r1, r4, lr}
 800076a:	681c      	ldr	r4, [r3, #0]
 800076c:	b124      	cbz	r4, 8000778 <iprintf+0x14>
 800076e:	69a3      	ldr	r3, [r4, #24]
 8000770:	b913      	cbnz	r3, 8000778 <iprintf+0x14>
 8000772:	4620      	mov	r0, r4
 8000774:	f000 f866 	bl	8000844 <__sinit>
 8000778:	ab05      	add	r3, sp, #20
 800077a:	9a04      	ldr	r2, [sp, #16]
 800077c:	68a1      	ldr	r1, [r4, #8]
 800077e:	9301      	str	r3, [sp, #4]
 8000780:	4620      	mov	r0, r4
 8000782:	f000 f9bd 	bl	8000b00 <_vfiprintf_r>
 8000786:	b002      	add	sp, #8
 8000788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078c:	b004      	add	sp, #16
 800078e:	4770      	bx	lr
 8000790:	20000000 	.word	0x20000000

08000794 <std>:
 8000794:	2300      	movs	r3, #0
 8000796:	b510      	push	{r4, lr}
 8000798:	4604      	mov	r4, r0
 800079a:	e9c0 3300 	strd	r3, r3, [r0]
 800079e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007a2:	6083      	str	r3, [r0, #8]
 80007a4:	8181      	strh	r1, [r0, #12]
 80007a6:	6643      	str	r3, [r0, #100]	; 0x64
 80007a8:	81c2      	strh	r2, [r0, #14]
 80007aa:	6183      	str	r3, [r0, #24]
 80007ac:	4619      	mov	r1, r3
 80007ae:	2208      	movs	r2, #8
 80007b0:	305c      	adds	r0, #92	; 0x5c
 80007b2:	f7ff ffcf 	bl	8000754 <memset>
 80007b6:	4b05      	ldr	r3, [pc, #20]	; (80007cc <std+0x38>)
 80007b8:	6263      	str	r3, [r4, #36]	; 0x24
 80007ba:	4b05      	ldr	r3, [pc, #20]	; (80007d0 <std+0x3c>)
 80007bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80007be:	4b05      	ldr	r3, [pc, #20]	; (80007d4 <std+0x40>)
 80007c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007c2:	4b05      	ldr	r3, [pc, #20]	; (80007d8 <std+0x44>)
 80007c4:	6224      	str	r4, [r4, #32]
 80007c6:	6323      	str	r3, [r4, #48]	; 0x30
 80007c8:	bd10      	pop	{r4, pc}
 80007ca:	bf00      	nop
 80007cc:	080010a9 	.word	0x080010a9
 80007d0:	080010cb 	.word	0x080010cb
 80007d4:	08001103 	.word	0x08001103
 80007d8:	08001127 	.word	0x08001127

080007dc <_cleanup_r>:
 80007dc:	4901      	ldr	r1, [pc, #4]	; (80007e4 <_cleanup_r+0x8>)
 80007de:	f000 b8af 	b.w	8000940 <_fwalk_reent>
 80007e2:	bf00      	nop
 80007e4:	08001401 	.word	0x08001401

080007e8 <__sfmoreglue>:
 80007e8:	b570      	push	{r4, r5, r6, lr}
 80007ea:	2268      	movs	r2, #104	; 0x68
 80007ec:	1e4d      	subs	r5, r1, #1
 80007ee:	4355      	muls	r5, r2
 80007f0:	460e      	mov	r6, r1
 80007f2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80007f6:	f000 f8e5 	bl	80009c4 <_malloc_r>
 80007fa:	4604      	mov	r4, r0
 80007fc:	b140      	cbz	r0, 8000810 <__sfmoreglue+0x28>
 80007fe:	2100      	movs	r1, #0
 8000800:	e9c0 1600 	strd	r1, r6, [r0]
 8000804:	300c      	adds	r0, #12
 8000806:	60a0      	str	r0, [r4, #8]
 8000808:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800080c:	f7ff ffa2 	bl	8000754 <memset>
 8000810:	4620      	mov	r0, r4
 8000812:	bd70      	pop	{r4, r5, r6, pc}

08000814 <__sfp_lock_acquire>:
 8000814:	4801      	ldr	r0, [pc, #4]	; (800081c <__sfp_lock_acquire+0x8>)
 8000816:	f000 b8b3 	b.w	8000980 <__retarget_lock_acquire_recursive>
 800081a:	bf00      	nop
 800081c:	20000085 	.word	0x20000085

08000820 <__sfp_lock_release>:
 8000820:	4801      	ldr	r0, [pc, #4]	; (8000828 <__sfp_lock_release+0x8>)
 8000822:	f000 b8ae 	b.w	8000982 <__retarget_lock_release_recursive>
 8000826:	bf00      	nop
 8000828:	20000085 	.word	0x20000085

0800082c <__sinit_lock_acquire>:
 800082c:	4801      	ldr	r0, [pc, #4]	; (8000834 <__sinit_lock_acquire+0x8>)
 800082e:	f000 b8a7 	b.w	8000980 <__retarget_lock_acquire_recursive>
 8000832:	bf00      	nop
 8000834:	20000086 	.word	0x20000086

08000838 <__sinit_lock_release>:
 8000838:	4801      	ldr	r0, [pc, #4]	; (8000840 <__sinit_lock_release+0x8>)
 800083a:	f000 b8a2 	b.w	8000982 <__retarget_lock_release_recursive>
 800083e:	bf00      	nop
 8000840:	20000086 	.word	0x20000086

08000844 <__sinit>:
 8000844:	b510      	push	{r4, lr}
 8000846:	4604      	mov	r4, r0
 8000848:	f7ff fff0 	bl	800082c <__sinit_lock_acquire>
 800084c:	69a3      	ldr	r3, [r4, #24]
 800084e:	b11b      	cbz	r3, 8000858 <__sinit+0x14>
 8000850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000854:	f7ff bff0 	b.w	8000838 <__sinit_lock_release>
 8000858:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800085c:	6523      	str	r3, [r4, #80]	; 0x50
 800085e:	4b13      	ldr	r3, [pc, #76]	; (80008ac <__sinit+0x68>)
 8000860:	4a13      	ldr	r2, [pc, #76]	; (80008b0 <__sinit+0x6c>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	62a2      	str	r2, [r4, #40]	; 0x28
 8000866:	42a3      	cmp	r3, r4
 8000868:	bf04      	itt	eq
 800086a:	2301      	moveq	r3, #1
 800086c:	61a3      	streq	r3, [r4, #24]
 800086e:	4620      	mov	r0, r4
 8000870:	f000 f820 	bl	80008b4 <__sfp>
 8000874:	6060      	str	r0, [r4, #4]
 8000876:	4620      	mov	r0, r4
 8000878:	f000 f81c 	bl	80008b4 <__sfp>
 800087c:	60a0      	str	r0, [r4, #8]
 800087e:	4620      	mov	r0, r4
 8000880:	f000 f818 	bl	80008b4 <__sfp>
 8000884:	2200      	movs	r2, #0
 8000886:	60e0      	str	r0, [r4, #12]
 8000888:	2104      	movs	r1, #4
 800088a:	6860      	ldr	r0, [r4, #4]
 800088c:	f7ff ff82 	bl	8000794 <std>
 8000890:	68a0      	ldr	r0, [r4, #8]
 8000892:	2201      	movs	r2, #1
 8000894:	2109      	movs	r1, #9
 8000896:	f7ff ff7d 	bl	8000794 <std>
 800089a:	68e0      	ldr	r0, [r4, #12]
 800089c:	2202      	movs	r2, #2
 800089e:	2112      	movs	r1, #18
 80008a0:	f7ff ff78 	bl	8000794 <std>
 80008a4:	2301      	movs	r3, #1
 80008a6:	61a3      	str	r3, [r4, #24]
 80008a8:	e7d2      	b.n	8000850 <__sinit+0xc>
 80008aa:	bf00      	nop
 80008ac:	080016b4 	.word	0x080016b4
 80008b0:	080007dd 	.word	0x080007dd

080008b4 <__sfp>:
 80008b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b6:	4607      	mov	r7, r0
 80008b8:	f7ff ffac 	bl	8000814 <__sfp_lock_acquire>
 80008bc:	4b1e      	ldr	r3, [pc, #120]	; (8000938 <__sfp+0x84>)
 80008be:	681e      	ldr	r6, [r3, #0]
 80008c0:	69b3      	ldr	r3, [r6, #24]
 80008c2:	b913      	cbnz	r3, 80008ca <__sfp+0x16>
 80008c4:	4630      	mov	r0, r6
 80008c6:	f7ff ffbd 	bl	8000844 <__sinit>
 80008ca:	3648      	adds	r6, #72	; 0x48
 80008cc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008d0:	3b01      	subs	r3, #1
 80008d2:	d503      	bpl.n	80008dc <__sfp+0x28>
 80008d4:	6833      	ldr	r3, [r6, #0]
 80008d6:	b30b      	cbz	r3, 800091c <__sfp+0x68>
 80008d8:	6836      	ldr	r6, [r6, #0]
 80008da:	e7f7      	b.n	80008cc <__sfp+0x18>
 80008dc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80008e0:	b9d5      	cbnz	r5, 8000918 <__sfp+0x64>
 80008e2:	4b16      	ldr	r3, [pc, #88]	; (800093c <__sfp+0x88>)
 80008e4:	60e3      	str	r3, [r4, #12]
 80008e6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80008ea:	6665      	str	r5, [r4, #100]	; 0x64
 80008ec:	f000 f847 	bl	800097e <__retarget_lock_init_recursive>
 80008f0:	f7ff ff96 	bl	8000820 <__sfp_lock_release>
 80008f4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80008f8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80008fc:	6025      	str	r5, [r4, #0]
 80008fe:	61a5      	str	r5, [r4, #24]
 8000900:	2208      	movs	r2, #8
 8000902:	4629      	mov	r1, r5
 8000904:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000908:	f7ff ff24 	bl	8000754 <memset>
 800090c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000910:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000914:	4620      	mov	r0, r4
 8000916:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000918:	3468      	adds	r4, #104	; 0x68
 800091a:	e7d9      	b.n	80008d0 <__sfp+0x1c>
 800091c:	2104      	movs	r1, #4
 800091e:	4638      	mov	r0, r7
 8000920:	f7ff ff62 	bl	80007e8 <__sfmoreglue>
 8000924:	4604      	mov	r4, r0
 8000926:	6030      	str	r0, [r6, #0]
 8000928:	2800      	cmp	r0, #0
 800092a:	d1d5      	bne.n	80008d8 <__sfp+0x24>
 800092c:	f7ff ff78 	bl	8000820 <__sfp_lock_release>
 8000930:	230c      	movs	r3, #12
 8000932:	603b      	str	r3, [r7, #0]
 8000934:	e7ee      	b.n	8000914 <__sfp+0x60>
 8000936:	bf00      	nop
 8000938:	080016b4 	.word	0x080016b4
 800093c:	ffff0001 	.word	0xffff0001

08000940 <_fwalk_reent>:
 8000940:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000944:	4606      	mov	r6, r0
 8000946:	4688      	mov	r8, r1
 8000948:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800094c:	2700      	movs	r7, #0
 800094e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000952:	f1b9 0901 	subs.w	r9, r9, #1
 8000956:	d505      	bpl.n	8000964 <_fwalk_reent+0x24>
 8000958:	6824      	ldr	r4, [r4, #0]
 800095a:	2c00      	cmp	r4, #0
 800095c:	d1f7      	bne.n	800094e <_fwalk_reent+0xe>
 800095e:	4638      	mov	r0, r7
 8000960:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000964:	89ab      	ldrh	r3, [r5, #12]
 8000966:	2b01      	cmp	r3, #1
 8000968:	d907      	bls.n	800097a <_fwalk_reent+0x3a>
 800096a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800096e:	3301      	adds	r3, #1
 8000970:	d003      	beq.n	800097a <_fwalk_reent+0x3a>
 8000972:	4629      	mov	r1, r5
 8000974:	4630      	mov	r0, r6
 8000976:	47c0      	blx	r8
 8000978:	4307      	orrs	r7, r0
 800097a:	3568      	adds	r5, #104	; 0x68
 800097c:	e7e9      	b.n	8000952 <_fwalk_reent+0x12>

0800097e <__retarget_lock_init_recursive>:
 800097e:	4770      	bx	lr

08000980 <__retarget_lock_acquire_recursive>:
 8000980:	4770      	bx	lr

08000982 <__retarget_lock_release_recursive>:
 8000982:	4770      	bx	lr

08000984 <sbrk_aligned>:
 8000984:	b570      	push	{r4, r5, r6, lr}
 8000986:	4e0e      	ldr	r6, [pc, #56]	; (80009c0 <sbrk_aligned+0x3c>)
 8000988:	460c      	mov	r4, r1
 800098a:	6831      	ldr	r1, [r6, #0]
 800098c:	4605      	mov	r5, r0
 800098e:	b911      	cbnz	r1, 8000996 <sbrk_aligned+0x12>
 8000990:	f000 fb7a 	bl	8001088 <_sbrk_r>
 8000994:	6030      	str	r0, [r6, #0]
 8000996:	4621      	mov	r1, r4
 8000998:	4628      	mov	r0, r5
 800099a:	f000 fb75 	bl	8001088 <_sbrk_r>
 800099e:	1c43      	adds	r3, r0, #1
 80009a0:	d00a      	beq.n	80009b8 <sbrk_aligned+0x34>
 80009a2:	1cc4      	adds	r4, r0, #3
 80009a4:	f024 0403 	bic.w	r4, r4, #3
 80009a8:	42a0      	cmp	r0, r4
 80009aa:	d007      	beq.n	80009bc <sbrk_aligned+0x38>
 80009ac:	1a21      	subs	r1, r4, r0
 80009ae:	4628      	mov	r0, r5
 80009b0:	f000 fb6a 	bl	8001088 <_sbrk_r>
 80009b4:	3001      	adds	r0, #1
 80009b6:	d101      	bne.n	80009bc <sbrk_aligned+0x38>
 80009b8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80009bc:	4620      	mov	r0, r4
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	2000008c 	.word	0x2000008c

080009c4 <_malloc_r>:
 80009c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009c8:	1ccd      	adds	r5, r1, #3
 80009ca:	f025 0503 	bic.w	r5, r5, #3
 80009ce:	3508      	adds	r5, #8
 80009d0:	2d0c      	cmp	r5, #12
 80009d2:	bf38      	it	cc
 80009d4:	250c      	movcc	r5, #12
 80009d6:	2d00      	cmp	r5, #0
 80009d8:	4607      	mov	r7, r0
 80009da:	db01      	blt.n	80009e0 <_malloc_r+0x1c>
 80009dc:	42a9      	cmp	r1, r5
 80009de:	d905      	bls.n	80009ec <_malloc_r+0x28>
 80009e0:	230c      	movs	r3, #12
 80009e2:	603b      	str	r3, [r7, #0]
 80009e4:	2600      	movs	r6, #0
 80009e6:	4630      	mov	r0, r6
 80009e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009ec:	4e2e      	ldr	r6, [pc, #184]	; (8000aa8 <_malloc_r+0xe4>)
 80009ee:	f000 fdbb 	bl	8001568 <__malloc_lock>
 80009f2:	6833      	ldr	r3, [r6, #0]
 80009f4:	461c      	mov	r4, r3
 80009f6:	bb34      	cbnz	r4, 8000a46 <_malloc_r+0x82>
 80009f8:	4629      	mov	r1, r5
 80009fa:	4638      	mov	r0, r7
 80009fc:	f7ff ffc2 	bl	8000984 <sbrk_aligned>
 8000a00:	1c43      	adds	r3, r0, #1
 8000a02:	4604      	mov	r4, r0
 8000a04:	d14d      	bne.n	8000aa2 <_malloc_r+0xde>
 8000a06:	6834      	ldr	r4, [r6, #0]
 8000a08:	4626      	mov	r6, r4
 8000a0a:	2e00      	cmp	r6, #0
 8000a0c:	d140      	bne.n	8000a90 <_malloc_r+0xcc>
 8000a0e:	6823      	ldr	r3, [r4, #0]
 8000a10:	4631      	mov	r1, r6
 8000a12:	4638      	mov	r0, r7
 8000a14:	eb04 0803 	add.w	r8, r4, r3
 8000a18:	f000 fb36 	bl	8001088 <_sbrk_r>
 8000a1c:	4580      	cmp	r8, r0
 8000a1e:	d13a      	bne.n	8000a96 <_malloc_r+0xd2>
 8000a20:	6821      	ldr	r1, [r4, #0]
 8000a22:	3503      	adds	r5, #3
 8000a24:	1a6d      	subs	r5, r5, r1
 8000a26:	f025 0503 	bic.w	r5, r5, #3
 8000a2a:	3508      	adds	r5, #8
 8000a2c:	2d0c      	cmp	r5, #12
 8000a2e:	bf38      	it	cc
 8000a30:	250c      	movcc	r5, #12
 8000a32:	4629      	mov	r1, r5
 8000a34:	4638      	mov	r0, r7
 8000a36:	f7ff ffa5 	bl	8000984 <sbrk_aligned>
 8000a3a:	3001      	adds	r0, #1
 8000a3c:	d02b      	beq.n	8000a96 <_malloc_r+0xd2>
 8000a3e:	6823      	ldr	r3, [r4, #0]
 8000a40:	442b      	add	r3, r5
 8000a42:	6023      	str	r3, [r4, #0]
 8000a44:	e00e      	b.n	8000a64 <_malloc_r+0xa0>
 8000a46:	6822      	ldr	r2, [r4, #0]
 8000a48:	1b52      	subs	r2, r2, r5
 8000a4a:	d41e      	bmi.n	8000a8a <_malloc_r+0xc6>
 8000a4c:	2a0b      	cmp	r2, #11
 8000a4e:	d916      	bls.n	8000a7e <_malloc_r+0xba>
 8000a50:	1961      	adds	r1, r4, r5
 8000a52:	42a3      	cmp	r3, r4
 8000a54:	6025      	str	r5, [r4, #0]
 8000a56:	bf18      	it	ne
 8000a58:	6059      	strne	r1, [r3, #4]
 8000a5a:	6863      	ldr	r3, [r4, #4]
 8000a5c:	bf08      	it	eq
 8000a5e:	6031      	streq	r1, [r6, #0]
 8000a60:	5162      	str	r2, [r4, r5]
 8000a62:	604b      	str	r3, [r1, #4]
 8000a64:	4638      	mov	r0, r7
 8000a66:	f104 060b 	add.w	r6, r4, #11
 8000a6a:	f000 fd83 	bl	8001574 <__malloc_unlock>
 8000a6e:	f026 0607 	bic.w	r6, r6, #7
 8000a72:	1d23      	adds	r3, r4, #4
 8000a74:	1af2      	subs	r2, r6, r3
 8000a76:	d0b6      	beq.n	80009e6 <_malloc_r+0x22>
 8000a78:	1b9b      	subs	r3, r3, r6
 8000a7a:	50a3      	str	r3, [r4, r2]
 8000a7c:	e7b3      	b.n	80009e6 <_malloc_r+0x22>
 8000a7e:	6862      	ldr	r2, [r4, #4]
 8000a80:	42a3      	cmp	r3, r4
 8000a82:	bf0c      	ite	eq
 8000a84:	6032      	streq	r2, [r6, #0]
 8000a86:	605a      	strne	r2, [r3, #4]
 8000a88:	e7ec      	b.n	8000a64 <_malloc_r+0xa0>
 8000a8a:	4623      	mov	r3, r4
 8000a8c:	6864      	ldr	r4, [r4, #4]
 8000a8e:	e7b2      	b.n	80009f6 <_malloc_r+0x32>
 8000a90:	4634      	mov	r4, r6
 8000a92:	6876      	ldr	r6, [r6, #4]
 8000a94:	e7b9      	b.n	8000a0a <_malloc_r+0x46>
 8000a96:	230c      	movs	r3, #12
 8000a98:	603b      	str	r3, [r7, #0]
 8000a9a:	4638      	mov	r0, r7
 8000a9c:	f000 fd6a 	bl	8001574 <__malloc_unlock>
 8000aa0:	e7a1      	b.n	80009e6 <_malloc_r+0x22>
 8000aa2:	6025      	str	r5, [r4, #0]
 8000aa4:	e7de      	b.n	8000a64 <_malloc_r+0xa0>
 8000aa6:	bf00      	nop
 8000aa8:	20000088 	.word	0x20000088

08000aac <__sfputc_r>:
 8000aac:	6893      	ldr	r3, [r2, #8]
 8000aae:	3b01      	subs	r3, #1
 8000ab0:	2b00      	cmp	r3, #0
 8000ab2:	b410      	push	{r4}
 8000ab4:	6093      	str	r3, [r2, #8]
 8000ab6:	da08      	bge.n	8000aca <__sfputc_r+0x1e>
 8000ab8:	6994      	ldr	r4, [r2, #24]
 8000aba:	42a3      	cmp	r3, r4
 8000abc:	db01      	blt.n	8000ac2 <__sfputc_r+0x16>
 8000abe:	290a      	cmp	r1, #10
 8000ac0:	d103      	bne.n	8000aca <__sfputc_r+0x1e>
 8000ac2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ac6:	f000 bb33 	b.w	8001130 <__swbuf_r>
 8000aca:	6813      	ldr	r3, [r2, #0]
 8000acc:	1c58      	adds	r0, r3, #1
 8000ace:	6010      	str	r0, [r2, #0]
 8000ad0:	7019      	strb	r1, [r3, #0]
 8000ad2:	4608      	mov	r0, r1
 8000ad4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ad8:	4770      	bx	lr

08000ada <__sfputs_r>:
 8000ada:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000adc:	4606      	mov	r6, r0
 8000ade:	460f      	mov	r7, r1
 8000ae0:	4614      	mov	r4, r2
 8000ae2:	18d5      	adds	r5, r2, r3
 8000ae4:	42ac      	cmp	r4, r5
 8000ae6:	d101      	bne.n	8000aec <__sfputs_r+0x12>
 8000ae8:	2000      	movs	r0, #0
 8000aea:	e007      	b.n	8000afc <__sfputs_r+0x22>
 8000aec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000af0:	463a      	mov	r2, r7
 8000af2:	4630      	mov	r0, r6
 8000af4:	f7ff ffda 	bl	8000aac <__sfputc_r>
 8000af8:	1c43      	adds	r3, r0, #1
 8000afa:	d1f3      	bne.n	8000ae4 <__sfputs_r+0xa>
 8000afc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000b00 <_vfiprintf_r>:
 8000b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b04:	460d      	mov	r5, r1
 8000b06:	b09d      	sub	sp, #116	; 0x74
 8000b08:	4614      	mov	r4, r2
 8000b0a:	4698      	mov	r8, r3
 8000b0c:	4606      	mov	r6, r0
 8000b0e:	b118      	cbz	r0, 8000b18 <_vfiprintf_r+0x18>
 8000b10:	6983      	ldr	r3, [r0, #24]
 8000b12:	b90b      	cbnz	r3, 8000b18 <_vfiprintf_r+0x18>
 8000b14:	f7ff fe96 	bl	8000844 <__sinit>
 8000b18:	4b89      	ldr	r3, [pc, #548]	; (8000d40 <_vfiprintf_r+0x240>)
 8000b1a:	429d      	cmp	r5, r3
 8000b1c:	d11b      	bne.n	8000b56 <_vfiprintf_r+0x56>
 8000b1e:	6875      	ldr	r5, [r6, #4]
 8000b20:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b22:	07d9      	lsls	r1, r3, #31
 8000b24:	d405      	bmi.n	8000b32 <_vfiprintf_r+0x32>
 8000b26:	89ab      	ldrh	r3, [r5, #12]
 8000b28:	059a      	lsls	r2, r3, #22
 8000b2a:	d402      	bmi.n	8000b32 <_vfiprintf_r+0x32>
 8000b2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b2e:	f7ff ff27 	bl	8000980 <__retarget_lock_acquire_recursive>
 8000b32:	89ab      	ldrh	r3, [r5, #12]
 8000b34:	071b      	lsls	r3, r3, #28
 8000b36:	d501      	bpl.n	8000b3c <_vfiprintf_r+0x3c>
 8000b38:	692b      	ldr	r3, [r5, #16]
 8000b3a:	b9eb      	cbnz	r3, 8000b78 <_vfiprintf_r+0x78>
 8000b3c:	4629      	mov	r1, r5
 8000b3e:	4630      	mov	r0, r6
 8000b40:	f000 fb5a 	bl	80011f8 <__swsetup_r>
 8000b44:	b1c0      	cbz	r0, 8000b78 <_vfiprintf_r+0x78>
 8000b46:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b48:	07dc      	lsls	r4, r3, #31
 8000b4a:	d50e      	bpl.n	8000b6a <_vfiprintf_r+0x6a>
 8000b4c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b50:	b01d      	add	sp, #116	; 0x74
 8000b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b56:	4b7b      	ldr	r3, [pc, #492]	; (8000d44 <_vfiprintf_r+0x244>)
 8000b58:	429d      	cmp	r5, r3
 8000b5a:	d101      	bne.n	8000b60 <_vfiprintf_r+0x60>
 8000b5c:	68b5      	ldr	r5, [r6, #8]
 8000b5e:	e7df      	b.n	8000b20 <_vfiprintf_r+0x20>
 8000b60:	4b79      	ldr	r3, [pc, #484]	; (8000d48 <_vfiprintf_r+0x248>)
 8000b62:	429d      	cmp	r5, r3
 8000b64:	bf08      	it	eq
 8000b66:	68f5      	ldreq	r5, [r6, #12]
 8000b68:	e7da      	b.n	8000b20 <_vfiprintf_r+0x20>
 8000b6a:	89ab      	ldrh	r3, [r5, #12]
 8000b6c:	0598      	lsls	r0, r3, #22
 8000b6e:	d4ed      	bmi.n	8000b4c <_vfiprintf_r+0x4c>
 8000b70:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b72:	f7ff ff06 	bl	8000982 <__retarget_lock_release_recursive>
 8000b76:	e7e9      	b.n	8000b4c <_vfiprintf_r+0x4c>
 8000b78:	2300      	movs	r3, #0
 8000b7a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b7c:	2320      	movs	r3, #32
 8000b7e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b82:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b86:	2330      	movs	r3, #48	; 0x30
 8000b88:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000d4c <_vfiprintf_r+0x24c>
 8000b8c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b90:	f04f 0901 	mov.w	r9, #1
 8000b94:	4623      	mov	r3, r4
 8000b96:	469a      	mov	sl, r3
 8000b98:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b9c:	b10a      	cbz	r2, 8000ba2 <_vfiprintf_r+0xa2>
 8000b9e:	2a25      	cmp	r2, #37	; 0x25
 8000ba0:	d1f9      	bne.n	8000b96 <_vfiprintf_r+0x96>
 8000ba2:	ebba 0b04 	subs.w	fp, sl, r4
 8000ba6:	d00b      	beq.n	8000bc0 <_vfiprintf_r+0xc0>
 8000ba8:	465b      	mov	r3, fp
 8000baa:	4622      	mov	r2, r4
 8000bac:	4629      	mov	r1, r5
 8000bae:	4630      	mov	r0, r6
 8000bb0:	f7ff ff93 	bl	8000ada <__sfputs_r>
 8000bb4:	3001      	adds	r0, #1
 8000bb6:	f000 80aa 	beq.w	8000d0e <_vfiprintf_r+0x20e>
 8000bba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000bbc:	445a      	add	r2, fp
 8000bbe:	9209      	str	r2, [sp, #36]	; 0x24
 8000bc0:	f89a 3000 	ldrb.w	r3, [sl]
 8000bc4:	2b00      	cmp	r3, #0
 8000bc6:	f000 80a2 	beq.w	8000d0e <_vfiprintf_r+0x20e>
 8000bca:	2300      	movs	r3, #0
 8000bcc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000bd0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000bd4:	f10a 0a01 	add.w	sl, sl, #1
 8000bd8:	9304      	str	r3, [sp, #16]
 8000bda:	9307      	str	r3, [sp, #28]
 8000bdc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000be0:	931a      	str	r3, [sp, #104]	; 0x68
 8000be2:	4654      	mov	r4, sl
 8000be4:	2205      	movs	r2, #5
 8000be6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bea:	4858      	ldr	r0, [pc, #352]	; (8000d4c <_vfiprintf_r+0x24c>)
 8000bec:	f7ff fb28 	bl	8000240 <memchr>
 8000bf0:	9a04      	ldr	r2, [sp, #16]
 8000bf2:	b9d8      	cbnz	r0, 8000c2c <_vfiprintf_r+0x12c>
 8000bf4:	06d1      	lsls	r1, r2, #27
 8000bf6:	bf44      	itt	mi
 8000bf8:	2320      	movmi	r3, #32
 8000bfa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bfe:	0713      	lsls	r3, r2, #28
 8000c00:	bf44      	itt	mi
 8000c02:	232b      	movmi	r3, #43	; 0x2b
 8000c04:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000c08:	f89a 3000 	ldrb.w	r3, [sl]
 8000c0c:	2b2a      	cmp	r3, #42	; 0x2a
 8000c0e:	d015      	beq.n	8000c3c <_vfiprintf_r+0x13c>
 8000c10:	9a07      	ldr	r2, [sp, #28]
 8000c12:	4654      	mov	r4, sl
 8000c14:	2000      	movs	r0, #0
 8000c16:	f04f 0c0a 	mov.w	ip, #10
 8000c1a:	4621      	mov	r1, r4
 8000c1c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c20:	3b30      	subs	r3, #48	; 0x30
 8000c22:	2b09      	cmp	r3, #9
 8000c24:	d94e      	bls.n	8000cc4 <_vfiprintf_r+0x1c4>
 8000c26:	b1b0      	cbz	r0, 8000c56 <_vfiprintf_r+0x156>
 8000c28:	9207      	str	r2, [sp, #28]
 8000c2a:	e014      	b.n	8000c56 <_vfiprintf_r+0x156>
 8000c2c:	eba0 0308 	sub.w	r3, r0, r8
 8000c30:	fa09 f303 	lsl.w	r3, r9, r3
 8000c34:	4313      	orrs	r3, r2
 8000c36:	9304      	str	r3, [sp, #16]
 8000c38:	46a2      	mov	sl, r4
 8000c3a:	e7d2      	b.n	8000be2 <_vfiprintf_r+0xe2>
 8000c3c:	9b03      	ldr	r3, [sp, #12]
 8000c3e:	1d19      	adds	r1, r3, #4
 8000c40:	681b      	ldr	r3, [r3, #0]
 8000c42:	9103      	str	r1, [sp, #12]
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	bfbb      	ittet	lt
 8000c48:	425b      	neglt	r3, r3
 8000c4a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c4e:	9307      	strge	r3, [sp, #28]
 8000c50:	9307      	strlt	r3, [sp, #28]
 8000c52:	bfb8      	it	lt
 8000c54:	9204      	strlt	r2, [sp, #16]
 8000c56:	7823      	ldrb	r3, [r4, #0]
 8000c58:	2b2e      	cmp	r3, #46	; 0x2e
 8000c5a:	d10c      	bne.n	8000c76 <_vfiprintf_r+0x176>
 8000c5c:	7863      	ldrb	r3, [r4, #1]
 8000c5e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c60:	d135      	bne.n	8000cce <_vfiprintf_r+0x1ce>
 8000c62:	9b03      	ldr	r3, [sp, #12]
 8000c64:	1d1a      	adds	r2, r3, #4
 8000c66:	681b      	ldr	r3, [r3, #0]
 8000c68:	9203      	str	r2, [sp, #12]
 8000c6a:	2b00      	cmp	r3, #0
 8000c6c:	bfb8      	it	lt
 8000c6e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000c72:	3402      	adds	r4, #2
 8000c74:	9305      	str	r3, [sp, #20]
 8000c76:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000d5c <_vfiprintf_r+0x25c>
 8000c7a:	7821      	ldrb	r1, [r4, #0]
 8000c7c:	2203      	movs	r2, #3
 8000c7e:	4650      	mov	r0, sl
 8000c80:	f7ff fade 	bl	8000240 <memchr>
 8000c84:	b140      	cbz	r0, 8000c98 <_vfiprintf_r+0x198>
 8000c86:	2340      	movs	r3, #64	; 0x40
 8000c88:	eba0 000a 	sub.w	r0, r0, sl
 8000c8c:	fa03 f000 	lsl.w	r0, r3, r0
 8000c90:	9b04      	ldr	r3, [sp, #16]
 8000c92:	4303      	orrs	r3, r0
 8000c94:	3401      	adds	r4, #1
 8000c96:	9304      	str	r3, [sp, #16]
 8000c98:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c9c:	482c      	ldr	r0, [pc, #176]	; (8000d50 <_vfiprintf_r+0x250>)
 8000c9e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ca2:	2206      	movs	r2, #6
 8000ca4:	f7ff facc 	bl	8000240 <memchr>
 8000ca8:	2800      	cmp	r0, #0
 8000caa:	d03f      	beq.n	8000d2c <_vfiprintf_r+0x22c>
 8000cac:	4b29      	ldr	r3, [pc, #164]	; (8000d54 <_vfiprintf_r+0x254>)
 8000cae:	bb1b      	cbnz	r3, 8000cf8 <_vfiprintf_r+0x1f8>
 8000cb0:	9b03      	ldr	r3, [sp, #12]
 8000cb2:	3307      	adds	r3, #7
 8000cb4:	f023 0307 	bic.w	r3, r3, #7
 8000cb8:	3308      	adds	r3, #8
 8000cba:	9303      	str	r3, [sp, #12]
 8000cbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000cbe:	443b      	add	r3, r7
 8000cc0:	9309      	str	r3, [sp, #36]	; 0x24
 8000cc2:	e767      	b.n	8000b94 <_vfiprintf_r+0x94>
 8000cc4:	fb0c 3202 	mla	r2, ip, r2, r3
 8000cc8:	460c      	mov	r4, r1
 8000cca:	2001      	movs	r0, #1
 8000ccc:	e7a5      	b.n	8000c1a <_vfiprintf_r+0x11a>
 8000cce:	2300      	movs	r3, #0
 8000cd0:	3401      	adds	r4, #1
 8000cd2:	9305      	str	r3, [sp, #20]
 8000cd4:	4619      	mov	r1, r3
 8000cd6:	f04f 0c0a 	mov.w	ip, #10
 8000cda:	4620      	mov	r0, r4
 8000cdc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ce0:	3a30      	subs	r2, #48	; 0x30
 8000ce2:	2a09      	cmp	r2, #9
 8000ce4:	d903      	bls.n	8000cee <_vfiprintf_r+0x1ee>
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d0c5      	beq.n	8000c76 <_vfiprintf_r+0x176>
 8000cea:	9105      	str	r1, [sp, #20]
 8000cec:	e7c3      	b.n	8000c76 <_vfiprintf_r+0x176>
 8000cee:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	2301      	movs	r3, #1
 8000cf6:	e7f0      	b.n	8000cda <_vfiprintf_r+0x1da>
 8000cf8:	ab03      	add	r3, sp, #12
 8000cfa:	9300      	str	r3, [sp, #0]
 8000cfc:	462a      	mov	r2, r5
 8000cfe:	4b16      	ldr	r3, [pc, #88]	; (8000d58 <_vfiprintf_r+0x258>)
 8000d00:	a904      	add	r1, sp, #16
 8000d02:	4630      	mov	r0, r6
 8000d04:	f3af 8000 	nop.w
 8000d08:	4607      	mov	r7, r0
 8000d0a:	1c78      	adds	r0, r7, #1
 8000d0c:	d1d6      	bne.n	8000cbc <_vfiprintf_r+0x1bc>
 8000d0e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d10:	07d9      	lsls	r1, r3, #31
 8000d12:	d405      	bmi.n	8000d20 <_vfiprintf_r+0x220>
 8000d14:	89ab      	ldrh	r3, [r5, #12]
 8000d16:	059a      	lsls	r2, r3, #22
 8000d18:	d402      	bmi.n	8000d20 <_vfiprintf_r+0x220>
 8000d1a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d1c:	f7ff fe31 	bl	8000982 <__retarget_lock_release_recursive>
 8000d20:	89ab      	ldrh	r3, [r5, #12]
 8000d22:	065b      	lsls	r3, r3, #25
 8000d24:	f53f af12 	bmi.w	8000b4c <_vfiprintf_r+0x4c>
 8000d28:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d2a:	e711      	b.n	8000b50 <_vfiprintf_r+0x50>
 8000d2c:	ab03      	add	r3, sp, #12
 8000d2e:	9300      	str	r3, [sp, #0]
 8000d30:	462a      	mov	r2, r5
 8000d32:	4b09      	ldr	r3, [pc, #36]	; (8000d58 <_vfiprintf_r+0x258>)
 8000d34:	a904      	add	r1, sp, #16
 8000d36:	4630      	mov	r0, r6
 8000d38:	f000 f880 	bl	8000e3c <_printf_i>
 8000d3c:	e7e4      	b.n	8000d08 <_vfiprintf_r+0x208>
 8000d3e:	bf00      	nop
 8000d40:	080016d8 	.word	0x080016d8
 8000d44:	080016f8 	.word	0x080016f8
 8000d48:	080016b8 	.word	0x080016b8
 8000d4c:	08001718 	.word	0x08001718
 8000d50:	08001722 	.word	0x08001722
 8000d54:	00000000 	.word	0x00000000
 8000d58:	08000adb 	.word	0x08000adb
 8000d5c:	0800171e 	.word	0x0800171e

08000d60 <_printf_common>:
 8000d60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d64:	4616      	mov	r6, r2
 8000d66:	4699      	mov	r9, r3
 8000d68:	688a      	ldr	r2, [r1, #8]
 8000d6a:	690b      	ldr	r3, [r1, #16]
 8000d6c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d70:	4293      	cmp	r3, r2
 8000d72:	bfb8      	it	lt
 8000d74:	4613      	movlt	r3, r2
 8000d76:	6033      	str	r3, [r6, #0]
 8000d78:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d7c:	4607      	mov	r7, r0
 8000d7e:	460c      	mov	r4, r1
 8000d80:	b10a      	cbz	r2, 8000d86 <_printf_common+0x26>
 8000d82:	3301      	adds	r3, #1
 8000d84:	6033      	str	r3, [r6, #0]
 8000d86:	6823      	ldr	r3, [r4, #0]
 8000d88:	0699      	lsls	r1, r3, #26
 8000d8a:	bf42      	ittt	mi
 8000d8c:	6833      	ldrmi	r3, [r6, #0]
 8000d8e:	3302      	addmi	r3, #2
 8000d90:	6033      	strmi	r3, [r6, #0]
 8000d92:	6825      	ldr	r5, [r4, #0]
 8000d94:	f015 0506 	ands.w	r5, r5, #6
 8000d98:	d106      	bne.n	8000da8 <_printf_common+0x48>
 8000d9a:	f104 0a19 	add.w	sl, r4, #25
 8000d9e:	68e3      	ldr	r3, [r4, #12]
 8000da0:	6832      	ldr	r2, [r6, #0]
 8000da2:	1a9b      	subs	r3, r3, r2
 8000da4:	42ab      	cmp	r3, r5
 8000da6:	dc26      	bgt.n	8000df6 <_printf_common+0x96>
 8000da8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000dac:	1e13      	subs	r3, r2, #0
 8000dae:	6822      	ldr	r2, [r4, #0]
 8000db0:	bf18      	it	ne
 8000db2:	2301      	movne	r3, #1
 8000db4:	0692      	lsls	r2, r2, #26
 8000db6:	d42b      	bmi.n	8000e10 <_printf_common+0xb0>
 8000db8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000dbc:	4649      	mov	r1, r9
 8000dbe:	4638      	mov	r0, r7
 8000dc0:	47c0      	blx	r8
 8000dc2:	3001      	adds	r0, #1
 8000dc4:	d01e      	beq.n	8000e04 <_printf_common+0xa4>
 8000dc6:	6823      	ldr	r3, [r4, #0]
 8000dc8:	68e5      	ldr	r5, [r4, #12]
 8000dca:	6832      	ldr	r2, [r6, #0]
 8000dcc:	f003 0306 	and.w	r3, r3, #6
 8000dd0:	2b04      	cmp	r3, #4
 8000dd2:	bf08      	it	eq
 8000dd4:	1aad      	subeq	r5, r5, r2
 8000dd6:	68a3      	ldr	r3, [r4, #8]
 8000dd8:	6922      	ldr	r2, [r4, #16]
 8000dda:	bf0c      	ite	eq
 8000ddc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000de0:	2500      	movne	r5, #0
 8000de2:	4293      	cmp	r3, r2
 8000de4:	bfc4      	itt	gt
 8000de6:	1a9b      	subgt	r3, r3, r2
 8000de8:	18ed      	addgt	r5, r5, r3
 8000dea:	2600      	movs	r6, #0
 8000dec:	341a      	adds	r4, #26
 8000dee:	42b5      	cmp	r5, r6
 8000df0:	d11a      	bne.n	8000e28 <_printf_common+0xc8>
 8000df2:	2000      	movs	r0, #0
 8000df4:	e008      	b.n	8000e08 <_printf_common+0xa8>
 8000df6:	2301      	movs	r3, #1
 8000df8:	4652      	mov	r2, sl
 8000dfa:	4649      	mov	r1, r9
 8000dfc:	4638      	mov	r0, r7
 8000dfe:	47c0      	blx	r8
 8000e00:	3001      	adds	r0, #1
 8000e02:	d103      	bne.n	8000e0c <_printf_common+0xac>
 8000e04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0c:	3501      	adds	r5, #1
 8000e0e:	e7c6      	b.n	8000d9e <_printf_common+0x3e>
 8000e10:	18e1      	adds	r1, r4, r3
 8000e12:	1c5a      	adds	r2, r3, #1
 8000e14:	2030      	movs	r0, #48	; 0x30
 8000e16:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000e1a:	4422      	add	r2, r4
 8000e1c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000e20:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000e24:	3302      	adds	r3, #2
 8000e26:	e7c7      	b.n	8000db8 <_printf_common+0x58>
 8000e28:	2301      	movs	r3, #1
 8000e2a:	4622      	mov	r2, r4
 8000e2c:	4649      	mov	r1, r9
 8000e2e:	4638      	mov	r0, r7
 8000e30:	47c0      	blx	r8
 8000e32:	3001      	adds	r0, #1
 8000e34:	d0e6      	beq.n	8000e04 <_printf_common+0xa4>
 8000e36:	3601      	adds	r6, #1
 8000e38:	e7d9      	b.n	8000dee <_printf_common+0x8e>
	...

08000e3c <_printf_i>:
 8000e3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e40:	7e0f      	ldrb	r7, [r1, #24]
 8000e42:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000e44:	2f78      	cmp	r7, #120	; 0x78
 8000e46:	4691      	mov	r9, r2
 8000e48:	4680      	mov	r8, r0
 8000e4a:	460c      	mov	r4, r1
 8000e4c:	469a      	mov	sl, r3
 8000e4e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000e52:	d807      	bhi.n	8000e64 <_printf_i+0x28>
 8000e54:	2f62      	cmp	r7, #98	; 0x62
 8000e56:	d80a      	bhi.n	8000e6e <_printf_i+0x32>
 8000e58:	2f00      	cmp	r7, #0
 8000e5a:	f000 80d8 	beq.w	800100e <_printf_i+0x1d2>
 8000e5e:	2f58      	cmp	r7, #88	; 0x58
 8000e60:	f000 80a3 	beq.w	8000faa <_printf_i+0x16e>
 8000e64:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e68:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e6c:	e03a      	b.n	8000ee4 <_printf_i+0xa8>
 8000e6e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e72:	2b15      	cmp	r3, #21
 8000e74:	d8f6      	bhi.n	8000e64 <_printf_i+0x28>
 8000e76:	a101      	add	r1, pc, #4	; (adr r1, 8000e7c <_printf_i+0x40>)
 8000e78:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e7c:	08000ed5 	.word	0x08000ed5
 8000e80:	08000ee9 	.word	0x08000ee9
 8000e84:	08000e65 	.word	0x08000e65
 8000e88:	08000e65 	.word	0x08000e65
 8000e8c:	08000e65 	.word	0x08000e65
 8000e90:	08000e65 	.word	0x08000e65
 8000e94:	08000ee9 	.word	0x08000ee9
 8000e98:	08000e65 	.word	0x08000e65
 8000e9c:	08000e65 	.word	0x08000e65
 8000ea0:	08000e65 	.word	0x08000e65
 8000ea4:	08000e65 	.word	0x08000e65
 8000ea8:	08000ff5 	.word	0x08000ff5
 8000eac:	08000f19 	.word	0x08000f19
 8000eb0:	08000fd7 	.word	0x08000fd7
 8000eb4:	08000e65 	.word	0x08000e65
 8000eb8:	08000e65 	.word	0x08000e65
 8000ebc:	08001017 	.word	0x08001017
 8000ec0:	08000e65 	.word	0x08000e65
 8000ec4:	08000f19 	.word	0x08000f19
 8000ec8:	08000e65 	.word	0x08000e65
 8000ecc:	08000e65 	.word	0x08000e65
 8000ed0:	08000fdf 	.word	0x08000fdf
 8000ed4:	682b      	ldr	r3, [r5, #0]
 8000ed6:	1d1a      	adds	r2, r3, #4
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	602a      	str	r2, [r5, #0]
 8000edc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ee0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ee4:	2301      	movs	r3, #1
 8000ee6:	e0a3      	b.n	8001030 <_printf_i+0x1f4>
 8000ee8:	6820      	ldr	r0, [r4, #0]
 8000eea:	6829      	ldr	r1, [r5, #0]
 8000eec:	0606      	lsls	r6, r0, #24
 8000eee:	f101 0304 	add.w	r3, r1, #4
 8000ef2:	d50a      	bpl.n	8000f0a <_printf_i+0xce>
 8000ef4:	680e      	ldr	r6, [r1, #0]
 8000ef6:	602b      	str	r3, [r5, #0]
 8000ef8:	2e00      	cmp	r6, #0
 8000efa:	da03      	bge.n	8000f04 <_printf_i+0xc8>
 8000efc:	232d      	movs	r3, #45	; 0x2d
 8000efe:	4276      	negs	r6, r6
 8000f00:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f04:	485e      	ldr	r0, [pc, #376]	; (8001080 <_printf_i+0x244>)
 8000f06:	230a      	movs	r3, #10
 8000f08:	e019      	b.n	8000f3e <_printf_i+0x102>
 8000f0a:	680e      	ldr	r6, [r1, #0]
 8000f0c:	602b      	str	r3, [r5, #0]
 8000f0e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000f12:	bf18      	it	ne
 8000f14:	b236      	sxthne	r6, r6
 8000f16:	e7ef      	b.n	8000ef8 <_printf_i+0xbc>
 8000f18:	682b      	ldr	r3, [r5, #0]
 8000f1a:	6820      	ldr	r0, [r4, #0]
 8000f1c:	1d19      	adds	r1, r3, #4
 8000f1e:	6029      	str	r1, [r5, #0]
 8000f20:	0601      	lsls	r1, r0, #24
 8000f22:	d501      	bpl.n	8000f28 <_printf_i+0xec>
 8000f24:	681e      	ldr	r6, [r3, #0]
 8000f26:	e002      	b.n	8000f2e <_printf_i+0xf2>
 8000f28:	0646      	lsls	r6, r0, #25
 8000f2a:	d5fb      	bpl.n	8000f24 <_printf_i+0xe8>
 8000f2c:	881e      	ldrh	r6, [r3, #0]
 8000f2e:	4854      	ldr	r0, [pc, #336]	; (8001080 <_printf_i+0x244>)
 8000f30:	2f6f      	cmp	r7, #111	; 0x6f
 8000f32:	bf0c      	ite	eq
 8000f34:	2308      	moveq	r3, #8
 8000f36:	230a      	movne	r3, #10
 8000f38:	2100      	movs	r1, #0
 8000f3a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f3e:	6865      	ldr	r5, [r4, #4]
 8000f40:	60a5      	str	r5, [r4, #8]
 8000f42:	2d00      	cmp	r5, #0
 8000f44:	bfa2      	ittt	ge
 8000f46:	6821      	ldrge	r1, [r4, #0]
 8000f48:	f021 0104 	bicge.w	r1, r1, #4
 8000f4c:	6021      	strge	r1, [r4, #0]
 8000f4e:	b90e      	cbnz	r6, 8000f54 <_printf_i+0x118>
 8000f50:	2d00      	cmp	r5, #0
 8000f52:	d04d      	beq.n	8000ff0 <_printf_i+0x1b4>
 8000f54:	4615      	mov	r5, r2
 8000f56:	fbb6 f1f3 	udiv	r1, r6, r3
 8000f5a:	fb03 6711 	mls	r7, r3, r1, r6
 8000f5e:	5dc7      	ldrb	r7, [r0, r7]
 8000f60:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000f64:	4637      	mov	r7, r6
 8000f66:	42bb      	cmp	r3, r7
 8000f68:	460e      	mov	r6, r1
 8000f6a:	d9f4      	bls.n	8000f56 <_printf_i+0x11a>
 8000f6c:	2b08      	cmp	r3, #8
 8000f6e:	d10b      	bne.n	8000f88 <_printf_i+0x14c>
 8000f70:	6823      	ldr	r3, [r4, #0]
 8000f72:	07de      	lsls	r6, r3, #31
 8000f74:	d508      	bpl.n	8000f88 <_printf_i+0x14c>
 8000f76:	6923      	ldr	r3, [r4, #16]
 8000f78:	6861      	ldr	r1, [r4, #4]
 8000f7a:	4299      	cmp	r1, r3
 8000f7c:	bfde      	ittt	le
 8000f7e:	2330      	movle	r3, #48	; 0x30
 8000f80:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f84:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8000f88:	1b52      	subs	r2, r2, r5
 8000f8a:	6122      	str	r2, [r4, #16]
 8000f8c:	f8cd a000 	str.w	sl, [sp]
 8000f90:	464b      	mov	r3, r9
 8000f92:	aa03      	add	r2, sp, #12
 8000f94:	4621      	mov	r1, r4
 8000f96:	4640      	mov	r0, r8
 8000f98:	f7ff fee2 	bl	8000d60 <_printf_common>
 8000f9c:	3001      	adds	r0, #1
 8000f9e:	d14c      	bne.n	800103a <_printf_i+0x1fe>
 8000fa0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000fa4:	b004      	add	sp, #16
 8000fa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000faa:	4835      	ldr	r0, [pc, #212]	; (8001080 <_printf_i+0x244>)
 8000fac:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000fb0:	6829      	ldr	r1, [r5, #0]
 8000fb2:	6823      	ldr	r3, [r4, #0]
 8000fb4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000fb8:	6029      	str	r1, [r5, #0]
 8000fba:	061d      	lsls	r5, r3, #24
 8000fbc:	d514      	bpl.n	8000fe8 <_printf_i+0x1ac>
 8000fbe:	07df      	lsls	r7, r3, #31
 8000fc0:	bf44      	itt	mi
 8000fc2:	f043 0320 	orrmi.w	r3, r3, #32
 8000fc6:	6023      	strmi	r3, [r4, #0]
 8000fc8:	b91e      	cbnz	r6, 8000fd2 <_printf_i+0x196>
 8000fca:	6823      	ldr	r3, [r4, #0]
 8000fcc:	f023 0320 	bic.w	r3, r3, #32
 8000fd0:	6023      	str	r3, [r4, #0]
 8000fd2:	2310      	movs	r3, #16
 8000fd4:	e7b0      	b.n	8000f38 <_printf_i+0xfc>
 8000fd6:	6823      	ldr	r3, [r4, #0]
 8000fd8:	f043 0320 	orr.w	r3, r3, #32
 8000fdc:	6023      	str	r3, [r4, #0]
 8000fde:	2378      	movs	r3, #120	; 0x78
 8000fe0:	4828      	ldr	r0, [pc, #160]	; (8001084 <_printf_i+0x248>)
 8000fe2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000fe6:	e7e3      	b.n	8000fb0 <_printf_i+0x174>
 8000fe8:	0659      	lsls	r1, r3, #25
 8000fea:	bf48      	it	mi
 8000fec:	b2b6      	uxthmi	r6, r6
 8000fee:	e7e6      	b.n	8000fbe <_printf_i+0x182>
 8000ff0:	4615      	mov	r5, r2
 8000ff2:	e7bb      	b.n	8000f6c <_printf_i+0x130>
 8000ff4:	682b      	ldr	r3, [r5, #0]
 8000ff6:	6826      	ldr	r6, [r4, #0]
 8000ff8:	6961      	ldr	r1, [r4, #20]
 8000ffa:	1d18      	adds	r0, r3, #4
 8000ffc:	6028      	str	r0, [r5, #0]
 8000ffe:	0635      	lsls	r5, r6, #24
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	d501      	bpl.n	8001008 <_printf_i+0x1cc>
 8001004:	6019      	str	r1, [r3, #0]
 8001006:	e002      	b.n	800100e <_printf_i+0x1d2>
 8001008:	0670      	lsls	r0, r6, #25
 800100a:	d5fb      	bpl.n	8001004 <_printf_i+0x1c8>
 800100c:	8019      	strh	r1, [r3, #0]
 800100e:	2300      	movs	r3, #0
 8001010:	6123      	str	r3, [r4, #16]
 8001012:	4615      	mov	r5, r2
 8001014:	e7ba      	b.n	8000f8c <_printf_i+0x150>
 8001016:	682b      	ldr	r3, [r5, #0]
 8001018:	1d1a      	adds	r2, r3, #4
 800101a:	602a      	str	r2, [r5, #0]
 800101c:	681d      	ldr	r5, [r3, #0]
 800101e:	6862      	ldr	r2, [r4, #4]
 8001020:	2100      	movs	r1, #0
 8001022:	4628      	mov	r0, r5
 8001024:	f7ff f90c 	bl	8000240 <memchr>
 8001028:	b108      	cbz	r0, 800102e <_printf_i+0x1f2>
 800102a:	1b40      	subs	r0, r0, r5
 800102c:	6060      	str	r0, [r4, #4]
 800102e:	6863      	ldr	r3, [r4, #4]
 8001030:	6123      	str	r3, [r4, #16]
 8001032:	2300      	movs	r3, #0
 8001034:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001038:	e7a8      	b.n	8000f8c <_printf_i+0x150>
 800103a:	6923      	ldr	r3, [r4, #16]
 800103c:	462a      	mov	r2, r5
 800103e:	4649      	mov	r1, r9
 8001040:	4640      	mov	r0, r8
 8001042:	47d0      	blx	sl
 8001044:	3001      	adds	r0, #1
 8001046:	d0ab      	beq.n	8000fa0 <_printf_i+0x164>
 8001048:	6823      	ldr	r3, [r4, #0]
 800104a:	079b      	lsls	r3, r3, #30
 800104c:	d413      	bmi.n	8001076 <_printf_i+0x23a>
 800104e:	68e0      	ldr	r0, [r4, #12]
 8001050:	9b03      	ldr	r3, [sp, #12]
 8001052:	4298      	cmp	r0, r3
 8001054:	bfb8      	it	lt
 8001056:	4618      	movlt	r0, r3
 8001058:	e7a4      	b.n	8000fa4 <_printf_i+0x168>
 800105a:	2301      	movs	r3, #1
 800105c:	4632      	mov	r2, r6
 800105e:	4649      	mov	r1, r9
 8001060:	4640      	mov	r0, r8
 8001062:	47d0      	blx	sl
 8001064:	3001      	adds	r0, #1
 8001066:	d09b      	beq.n	8000fa0 <_printf_i+0x164>
 8001068:	3501      	adds	r5, #1
 800106a:	68e3      	ldr	r3, [r4, #12]
 800106c:	9903      	ldr	r1, [sp, #12]
 800106e:	1a5b      	subs	r3, r3, r1
 8001070:	42ab      	cmp	r3, r5
 8001072:	dcf2      	bgt.n	800105a <_printf_i+0x21e>
 8001074:	e7eb      	b.n	800104e <_printf_i+0x212>
 8001076:	2500      	movs	r5, #0
 8001078:	f104 0619 	add.w	r6, r4, #25
 800107c:	e7f5      	b.n	800106a <_printf_i+0x22e>
 800107e:	bf00      	nop
 8001080:	08001729 	.word	0x08001729
 8001084:	0800173a 	.word	0x0800173a

08001088 <_sbrk_r>:
 8001088:	b538      	push	{r3, r4, r5, lr}
 800108a:	4d06      	ldr	r5, [pc, #24]	; (80010a4 <_sbrk_r+0x1c>)
 800108c:	2300      	movs	r3, #0
 800108e:	4604      	mov	r4, r0
 8001090:	4608      	mov	r0, r1
 8001092:	602b      	str	r3, [r5, #0]
 8001094:	f7ff fad4 	bl	8000640 <_sbrk>
 8001098:	1c43      	adds	r3, r0, #1
 800109a:	d102      	bne.n	80010a2 <_sbrk_r+0x1a>
 800109c:	682b      	ldr	r3, [r5, #0]
 800109e:	b103      	cbz	r3, 80010a2 <_sbrk_r+0x1a>
 80010a0:	6023      	str	r3, [r4, #0]
 80010a2:	bd38      	pop	{r3, r4, r5, pc}
 80010a4:	20000090 	.word	0x20000090

080010a8 <__sread>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	460c      	mov	r4, r1
 80010ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010b0:	f000 fab2 	bl	8001618 <_read_r>
 80010b4:	2800      	cmp	r0, #0
 80010b6:	bfab      	itete	ge
 80010b8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80010ba:	89a3      	ldrhlt	r3, [r4, #12]
 80010bc:	181b      	addge	r3, r3, r0
 80010be:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80010c2:	bfac      	ite	ge
 80010c4:	6563      	strge	r3, [r4, #84]	; 0x54
 80010c6:	81a3      	strhlt	r3, [r4, #12]
 80010c8:	bd10      	pop	{r4, pc}

080010ca <__swrite>:
 80010ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010ce:	461f      	mov	r7, r3
 80010d0:	898b      	ldrh	r3, [r1, #12]
 80010d2:	05db      	lsls	r3, r3, #23
 80010d4:	4605      	mov	r5, r0
 80010d6:	460c      	mov	r4, r1
 80010d8:	4616      	mov	r6, r2
 80010da:	d505      	bpl.n	80010e8 <__swrite+0x1e>
 80010dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010e0:	2302      	movs	r3, #2
 80010e2:	2200      	movs	r2, #0
 80010e4:	f000 f9c8 	bl	8001478 <_lseek_r>
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80010ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80010f2:	81a3      	strh	r3, [r4, #12]
 80010f4:	4632      	mov	r2, r6
 80010f6:	463b      	mov	r3, r7
 80010f8:	4628      	mov	r0, r5
 80010fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010fe:	f000 b869 	b.w	80011d4 <_write_r>

08001102 <__sseek>:
 8001102:	b510      	push	{r4, lr}
 8001104:	460c      	mov	r4, r1
 8001106:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800110a:	f000 f9b5 	bl	8001478 <_lseek_r>
 800110e:	1c43      	adds	r3, r0, #1
 8001110:	89a3      	ldrh	r3, [r4, #12]
 8001112:	bf15      	itete	ne
 8001114:	6560      	strne	r0, [r4, #84]	; 0x54
 8001116:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800111a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800111e:	81a3      	strheq	r3, [r4, #12]
 8001120:	bf18      	it	ne
 8001122:	81a3      	strhne	r3, [r4, #12]
 8001124:	bd10      	pop	{r4, pc}

08001126 <__sclose>:
 8001126:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112a:	f000 b8d3 	b.w	80012d4 <_close_r>
	...

08001130 <__swbuf_r>:
 8001130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001132:	460e      	mov	r6, r1
 8001134:	4614      	mov	r4, r2
 8001136:	4605      	mov	r5, r0
 8001138:	b118      	cbz	r0, 8001142 <__swbuf_r+0x12>
 800113a:	6983      	ldr	r3, [r0, #24]
 800113c:	b90b      	cbnz	r3, 8001142 <__swbuf_r+0x12>
 800113e:	f7ff fb81 	bl	8000844 <__sinit>
 8001142:	4b21      	ldr	r3, [pc, #132]	; (80011c8 <__swbuf_r+0x98>)
 8001144:	429c      	cmp	r4, r3
 8001146:	d12b      	bne.n	80011a0 <__swbuf_r+0x70>
 8001148:	686c      	ldr	r4, [r5, #4]
 800114a:	69a3      	ldr	r3, [r4, #24]
 800114c:	60a3      	str	r3, [r4, #8]
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	071a      	lsls	r2, r3, #28
 8001152:	d52f      	bpl.n	80011b4 <__swbuf_r+0x84>
 8001154:	6923      	ldr	r3, [r4, #16]
 8001156:	b36b      	cbz	r3, 80011b4 <__swbuf_r+0x84>
 8001158:	6923      	ldr	r3, [r4, #16]
 800115a:	6820      	ldr	r0, [r4, #0]
 800115c:	1ac0      	subs	r0, r0, r3
 800115e:	6963      	ldr	r3, [r4, #20]
 8001160:	b2f6      	uxtb	r6, r6
 8001162:	4283      	cmp	r3, r0
 8001164:	4637      	mov	r7, r6
 8001166:	dc04      	bgt.n	8001172 <__swbuf_r+0x42>
 8001168:	4621      	mov	r1, r4
 800116a:	4628      	mov	r0, r5
 800116c:	f000 f948 	bl	8001400 <_fflush_r>
 8001170:	bb30      	cbnz	r0, 80011c0 <__swbuf_r+0x90>
 8001172:	68a3      	ldr	r3, [r4, #8]
 8001174:	3b01      	subs	r3, #1
 8001176:	60a3      	str	r3, [r4, #8]
 8001178:	6823      	ldr	r3, [r4, #0]
 800117a:	1c5a      	adds	r2, r3, #1
 800117c:	6022      	str	r2, [r4, #0]
 800117e:	701e      	strb	r6, [r3, #0]
 8001180:	6963      	ldr	r3, [r4, #20]
 8001182:	3001      	adds	r0, #1
 8001184:	4283      	cmp	r3, r0
 8001186:	d004      	beq.n	8001192 <__swbuf_r+0x62>
 8001188:	89a3      	ldrh	r3, [r4, #12]
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d506      	bpl.n	800119c <__swbuf_r+0x6c>
 800118e:	2e0a      	cmp	r6, #10
 8001190:	d104      	bne.n	800119c <__swbuf_r+0x6c>
 8001192:	4621      	mov	r1, r4
 8001194:	4628      	mov	r0, r5
 8001196:	f000 f933 	bl	8001400 <_fflush_r>
 800119a:	b988      	cbnz	r0, 80011c0 <__swbuf_r+0x90>
 800119c:	4638      	mov	r0, r7
 800119e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011a0:	4b0a      	ldr	r3, [pc, #40]	; (80011cc <__swbuf_r+0x9c>)
 80011a2:	429c      	cmp	r4, r3
 80011a4:	d101      	bne.n	80011aa <__swbuf_r+0x7a>
 80011a6:	68ac      	ldr	r4, [r5, #8]
 80011a8:	e7cf      	b.n	800114a <__swbuf_r+0x1a>
 80011aa:	4b09      	ldr	r3, [pc, #36]	; (80011d0 <__swbuf_r+0xa0>)
 80011ac:	429c      	cmp	r4, r3
 80011ae:	bf08      	it	eq
 80011b0:	68ec      	ldreq	r4, [r5, #12]
 80011b2:	e7ca      	b.n	800114a <__swbuf_r+0x1a>
 80011b4:	4621      	mov	r1, r4
 80011b6:	4628      	mov	r0, r5
 80011b8:	f000 f81e 	bl	80011f8 <__swsetup_r>
 80011bc:	2800      	cmp	r0, #0
 80011be:	d0cb      	beq.n	8001158 <__swbuf_r+0x28>
 80011c0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80011c4:	e7ea      	b.n	800119c <__swbuf_r+0x6c>
 80011c6:	bf00      	nop
 80011c8:	080016d8 	.word	0x080016d8
 80011cc:	080016f8 	.word	0x080016f8
 80011d0:	080016b8 	.word	0x080016b8

080011d4 <_write_r>:
 80011d4:	b538      	push	{r3, r4, r5, lr}
 80011d6:	4d07      	ldr	r5, [pc, #28]	; (80011f4 <_write_r+0x20>)
 80011d8:	4604      	mov	r4, r0
 80011da:	4608      	mov	r0, r1
 80011dc:	4611      	mov	r1, r2
 80011de:	2200      	movs	r2, #0
 80011e0:	602a      	str	r2, [r5, #0]
 80011e2:	461a      	mov	r2, r3
 80011e4:	f7ff f9db 	bl	800059e <_write>
 80011e8:	1c43      	adds	r3, r0, #1
 80011ea:	d102      	bne.n	80011f2 <_write_r+0x1e>
 80011ec:	682b      	ldr	r3, [r5, #0]
 80011ee:	b103      	cbz	r3, 80011f2 <_write_r+0x1e>
 80011f0:	6023      	str	r3, [r4, #0]
 80011f2:	bd38      	pop	{r3, r4, r5, pc}
 80011f4:	20000090 	.word	0x20000090

080011f8 <__swsetup_r>:
 80011f8:	4b32      	ldr	r3, [pc, #200]	; (80012c4 <__swsetup_r+0xcc>)
 80011fa:	b570      	push	{r4, r5, r6, lr}
 80011fc:	681d      	ldr	r5, [r3, #0]
 80011fe:	4606      	mov	r6, r0
 8001200:	460c      	mov	r4, r1
 8001202:	b125      	cbz	r5, 800120e <__swsetup_r+0x16>
 8001204:	69ab      	ldr	r3, [r5, #24]
 8001206:	b913      	cbnz	r3, 800120e <__swsetup_r+0x16>
 8001208:	4628      	mov	r0, r5
 800120a:	f7ff fb1b 	bl	8000844 <__sinit>
 800120e:	4b2e      	ldr	r3, [pc, #184]	; (80012c8 <__swsetup_r+0xd0>)
 8001210:	429c      	cmp	r4, r3
 8001212:	d10f      	bne.n	8001234 <__swsetup_r+0x3c>
 8001214:	686c      	ldr	r4, [r5, #4]
 8001216:	89a3      	ldrh	r3, [r4, #12]
 8001218:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800121c:	0719      	lsls	r1, r3, #28
 800121e:	d42c      	bmi.n	800127a <__swsetup_r+0x82>
 8001220:	06dd      	lsls	r5, r3, #27
 8001222:	d411      	bmi.n	8001248 <__swsetup_r+0x50>
 8001224:	2309      	movs	r3, #9
 8001226:	6033      	str	r3, [r6, #0]
 8001228:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800122c:	81a3      	strh	r3, [r4, #12]
 800122e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001232:	e03e      	b.n	80012b2 <__swsetup_r+0xba>
 8001234:	4b25      	ldr	r3, [pc, #148]	; (80012cc <__swsetup_r+0xd4>)
 8001236:	429c      	cmp	r4, r3
 8001238:	d101      	bne.n	800123e <__swsetup_r+0x46>
 800123a:	68ac      	ldr	r4, [r5, #8]
 800123c:	e7eb      	b.n	8001216 <__swsetup_r+0x1e>
 800123e:	4b24      	ldr	r3, [pc, #144]	; (80012d0 <__swsetup_r+0xd8>)
 8001240:	429c      	cmp	r4, r3
 8001242:	bf08      	it	eq
 8001244:	68ec      	ldreq	r4, [r5, #12]
 8001246:	e7e6      	b.n	8001216 <__swsetup_r+0x1e>
 8001248:	0758      	lsls	r0, r3, #29
 800124a:	d512      	bpl.n	8001272 <__swsetup_r+0x7a>
 800124c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800124e:	b141      	cbz	r1, 8001262 <__swsetup_r+0x6a>
 8001250:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001254:	4299      	cmp	r1, r3
 8001256:	d002      	beq.n	800125e <__swsetup_r+0x66>
 8001258:	4630      	mov	r0, r6
 800125a:	f000 f991 	bl	8001580 <_free_r>
 800125e:	2300      	movs	r3, #0
 8001260:	6363      	str	r3, [r4, #52]	; 0x34
 8001262:	89a3      	ldrh	r3, [r4, #12]
 8001264:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001268:	81a3      	strh	r3, [r4, #12]
 800126a:	2300      	movs	r3, #0
 800126c:	6063      	str	r3, [r4, #4]
 800126e:	6923      	ldr	r3, [r4, #16]
 8001270:	6023      	str	r3, [r4, #0]
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	f043 0308 	orr.w	r3, r3, #8
 8001278:	81a3      	strh	r3, [r4, #12]
 800127a:	6923      	ldr	r3, [r4, #16]
 800127c:	b94b      	cbnz	r3, 8001292 <__swsetup_r+0x9a>
 800127e:	89a3      	ldrh	r3, [r4, #12]
 8001280:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001284:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001288:	d003      	beq.n	8001292 <__swsetup_r+0x9a>
 800128a:	4621      	mov	r1, r4
 800128c:	4630      	mov	r0, r6
 800128e:	f000 f92b 	bl	80014e8 <__smakebuf_r>
 8001292:	89a0      	ldrh	r0, [r4, #12]
 8001294:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001298:	f010 0301 	ands.w	r3, r0, #1
 800129c:	d00a      	beq.n	80012b4 <__swsetup_r+0xbc>
 800129e:	2300      	movs	r3, #0
 80012a0:	60a3      	str	r3, [r4, #8]
 80012a2:	6963      	ldr	r3, [r4, #20]
 80012a4:	425b      	negs	r3, r3
 80012a6:	61a3      	str	r3, [r4, #24]
 80012a8:	6923      	ldr	r3, [r4, #16]
 80012aa:	b943      	cbnz	r3, 80012be <__swsetup_r+0xc6>
 80012ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80012b0:	d1ba      	bne.n	8001228 <__swsetup_r+0x30>
 80012b2:	bd70      	pop	{r4, r5, r6, pc}
 80012b4:	0781      	lsls	r1, r0, #30
 80012b6:	bf58      	it	pl
 80012b8:	6963      	ldrpl	r3, [r4, #20]
 80012ba:	60a3      	str	r3, [r4, #8]
 80012bc:	e7f4      	b.n	80012a8 <__swsetup_r+0xb0>
 80012be:	2000      	movs	r0, #0
 80012c0:	e7f7      	b.n	80012b2 <__swsetup_r+0xba>
 80012c2:	bf00      	nop
 80012c4:	20000000 	.word	0x20000000
 80012c8:	080016d8 	.word	0x080016d8
 80012cc:	080016f8 	.word	0x080016f8
 80012d0:	080016b8 	.word	0x080016b8

080012d4 <_close_r>:
 80012d4:	b538      	push	{r3, r4, r5, lr}
 80012d6:	4d06      	ldr	r5, [pc, #24]	; (80012f0 <_close_r+0x1c>)
 80012d8:	2300      	movs	r3, #0
 80012da:	4604      	mov	r4, r0
 80012dc:	4608      	mov	r0, r1
 80012de:	602b      	str	r3, [r5, #0]
 80012e0:	f7ff f979 	bl	80005d6 <_close>
 80012e4:	1c43      	adds	r3, r0, #1
 80012e6:	d102      	bne.n	80012ee <_close_r+0x1a>
 80012e8:	682b      	ldr	r3, [r5, #0]
 80012ea:	b103      	cbz	r3, 80012ee <_close_r+0x1a>
 80012ec:	6023      	str	r3, [r4, #0]
 80012ee:	bd38      	pop	{r3, r4, r5, pc}
 80012f0:	20000090 	.word	0x20000090

080012f4 <__sflush_r>:
 80012f4:	898a      	ldrh	r2, [r1, #12]
 80012f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012fa:	4605      	mov	r5, r0
 80012fc:	0710      	lsls	r0, r2, #28
 80012fe:	460c      	mov	r4, r1
 8001300:	d458      	bmi.n	80013b4 <__sflush_r+0xc0>
 8001302:	684b      	ldr	r3, [r1, #4]
 8001304:	2b00      	cmp	r3, #0
 8001306:	dc05      	bgt.n	8001314 <__sflush_r+0x20>
 8001308:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800130a:	2b00      	cmp	r3, #0
 800130c:	dc02      	bgt.n	8001314 <__sflush_r+0x20>
 800130e:	2000      	movs	r0, #0
 8001310:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001314:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001316:	2e00      	cmp	r6, #0
 8001318:	d0f9      	beq.n	800130e <__sflush_r+0x1a>
 800131a:	2300      	movs	r3, #0
 800131c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001320:	682f      	ldr	r7, [r5, #0]
 8001322:	602b      	str	r3, [r5, #0]
 8001324:	d032      	beq.n	800138c <__sflush_r+0x98>
 8001326:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001328:	89a3      	ldrh	r3, [r4, #12]
 800132a:	075a      	lsls	r2, r3, #29
 800132c:	d505      	bpl.n	800133a <__sflush_r+0x46>
 800132e:	6863      	ldr	r3, [r4, #4]
 8001330:	1ac0      	subs	r0, r0, r3
 8001332:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001334:	b10b      	cbz	r3, 800133a <__sflush_r+0x46>
 8001336:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001338:	1ac0      	subs	r0, r0, r3
 800133a:	2300      	movs	r3, #0
 800133c:	4602      	mov	r2, r0
 800133e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001340:	6a21      	ldr	r1, [r4, #32]
 8001342:	4628      	mov	r0, r5
 8001344:	47b0      	blx	r6
 8001346:	1c43      	adds	r3, r0, #1
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	d106      	bne.n	800135a <__sflush_r+0x66>
 800134c:	6829      	ldr	r1, [r5, #0]
 800134e:	291d      	cmp	r1, #29
 8001350:	d82c      	bhi.n	80013ac <__sflush_r+0xb8>
 8001352:	4a2a      	ldr	r2, [pc, #168]	; (80013fc <__sflush_r+0x108>)
 8001354:	40ca      	lsrs	r2, r1
 8001356:	07d6      	lsls	r6, r2, #31
 8001358:	d528      	bpl.n	80013ac <__sflush_r+0xb8>
 800135a:	2200      	movs	r2, #0
 800135c:	6062      	str	r2, [r4, #4]
 800135e:	04d9      	lsls	r1, r3, #19
 8001360:	6922      	ldr	r2, [r4, #16]
 8001362:	6022      	str	r2, [r4, #0]
 8001364:	d504      	bpl.n	8001370 <__sflush_r+0x7c>
 8001366:	1c42      	adds	r2, r0, #1
 8001368:	d101      	bne.n	800136e <__sflush_r+0x7a>
 800136a:	682b      	ldr	r3, [r5, #0]
 800136c:	b903      	cbnz	r3, 8001370 <__sflush_r+0x7c>
 800136e:	6560      	str	r0, [r4, #84]	; 0x54
 8001370:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001372:	602f      	str	r7, [r5, #0]
 8001374:	2900      	cmp	r1, #0
 8001376:	d0ca      	beq.n	800130e <__sflush_r+0x1a>
 8001378:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800137c:	4299      	cmp	r1, r3
 800137e:	d002      	beq.n	8001386 <__sflush_r+0x92>
 8001380:	4628      	mov	r0, r5
 8001382:	f000 f8fd 	bl	8001580 <_free_r>
 8001386:	2000      	movs	r0, #0
 8001388:	6360      	str	r0, [r4, #52]	; 0x34
 800138a:	e7c1      	b.n	8001310 <__sflush_r+0x1c>
 800138c:	6a21      	ldr	r1, [r4, #32]
 800138e:	2301      	movs	r3, #1
 8001390:	4628      	mov	r0, r5
 8001392:	47b0      	blx	r6
 8001394:	1c41      	adds	r1, r0, #1
 8001396:	d1c7      	bne.n	8001328 <__sflush_r+0x34>
 8001398:	682b      	ldr	r3, [r5, #0]
 800139a:	2b00      	cmp	r3, #0
 800139c:	d0c4      	beq.n	8001328 <__sflush_r+0x34>
 800139e:	2b1d      	cmp	r3, #29
 80013a0:	d001      	beq.n	80013a6 <__sflush_r+0xb2>
 80013a2:	2b16      	cmp	r3, #22
 80013a4:	d101      	bne.n	80013aa <__sflush_r+0xb6>
 80013a6:	602f      	str	r7, [r5, #0]
 80013a8:	e7b1      	b.n	800130e <__sflush_r+0x1a>
 80013aa:	89a3      	ldrh	r3, [r4, #12]
 80013ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013b0:	81a3      	strh	r3, [r4, #12]
 80013b2:	e7ad      	b.n	8001310 <__sflush_r+0x1c>
 80013b4:	690f      	ldr	r7, [r1, #16]
 80013b6:	2f00      	cmp	r7, #0
 80013b8:	d0a9      	beq.n	800130e <__sflush_r+0x1a>
 80013ba:	0793      	lsls	r3, r2, #30
 80013bc:	680e      	ldr	r6, [r1, #0]
 80013be:	bf08      	it	eq
 80013c0:	694b      	ldreq	r3, [r1, #20]
 80013c2:	600f      	str	r7, [r1, #0]
 80013c4:	bf18      	it	ne
 80013c6:	2300      	movne	r3, #0
 80013c8:	eba6 0807 	sub.w	r8, r6, r7
 80013cc:	608b      	str	r3, [r1, #8]
 80013ce:	f1b8 0f00 	cmp.w	r8, #0
 80013d2:	dd9c      	ble.n	800130e <__sflush_r+0x1a>
 80013d4:	6a21      	ldr	r1, [r4, #32]
 80013d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80013d8:	4643      	mov	r3, r8
 80013da:	463a      	mov	r2, r7
 80013dc:	4628      	mov	r0, r5
 80013de:	47b0      	blx	r6
 80013e0:	2800      	cmp	r0, #0
 80013e2:	dc06      	bgt.n	80013f2 <__sflush_r+0xfe>
 80013e4:	89a3      	ldrh	r3, [r4, #12]
 80013e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80013ea:	81a3      	strh	r3, [r4, #12]
 80013ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80013f0:	e78e      	b.n	8001310 <__sflush_r+0x1c>
 80013f2:	4407      	add	r7, r0
 80013f4:	eba8 0800 	sub.w	r8, r8, r0
 80013f8:	e7e9      	b.n	80013ce <__sflush_r+0xda>
 80013fa:	bf00      	nop
 80013fc:	20400001 	.word	0x20400001

08001400 <_fflush_r>:
 8001400:	b538      	push	{r3, r4, r5, lr}
 8001402:	690b      	ldr	r3, [r1, #16]
 8001404:	4605      	mov	r5, r0
 8001406:	460c      	mov	r4, r1
 8001408:	b913      	cbnz	r3, 8001410 <_fflush_r+0x10>
 800140a:	2500      	movs	r5, #0
 800140c:	4628      	mov	r0, r5
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	b118      	cbz	r0, 800141a <_fflush_r+0x1a>
 8001412:	6983      	ldr	r3, [r0, #24]
 8001414:	b90b      	cbnz	r3, 800141a <_fflush_r+0x1a>
 8001416:	f7ff fa15 	bl	8000844 <__sinit>
 800141a:	4b14      	ldr	r3, [pc, #80]	; (800146c <_fflush_r+0x6c>)
 800141c:	429c      	cmp	r4, r3
 800141e:	d11b      	bne.n	8001458 <_fflush_r+0x58>
 8001420:	686c      	ldr	r4, [r5, #4]
 8001422:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001426:	2b00      	cmp	r3, #0
 8001428:	d0ef      	beq.n	800140a <_fflush_r+0xa>
 800142a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800142c:	07d0      	lsls	r0, r2, #31
 800142e:	d404      	bmi.n	800143a <_fflush_r+0x3a>
 8001430:	0599      	lsls	r1, r3, #22
 8001432:	d402      	bmi.n	800143a <_fflush_r+0x3a>
 8001434:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001436:	f7ff faa3 	bl	8000980 <__retarget_lock_acquire_recursive>
 800143a:	4628      	mov	r0, r5
 800143c:	4621      	mov	r1, r4
 800143e:	f7ff ff59 	bl	80012f4 <__sflush_r>
 8001442:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001444:	07da      	lsls	r2, r3, #31
 8001446:	4605      	mov	r5, r0
 8001448:	d4e0      	bmi.n	800140c <_fflush_r+0xc>
 800144a:	89a3      	ldrh	r3, [r4, #12]
 800144c:	059b      	lsls	r3, r3, #22
 800144e:	d4dd      	bmi.n	800140c <_fflush_r+0xc>
 8001450:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001452:	f7ff fa96 	bl	8000982 <__retarget_lock_release_recursive>
 8001456:	e7d9      	b.n	800140c <_fflush_r+0xc>
 8001458:	4b05      	ldr	r3, [pc, #20]	; (8001470 <_fflush_r+0x70>)
 800145a:	429c      	cmp	r4, r3
 800145c:	d101      	bne.n	8001462 <_fflush_r+0x62>
 800145e:	68ac      	ldr	r4, [r5, #8]
 8001460:	e7df      	b.n	8001422 <_fflush_r+0x22>
 8001462:	4b04      	ldr	r3, [pc, #16]	; (8001474 <_fflush_r+0x74>)
 8001464:	429c      	cmp	r4, r3
 8001466:	bf08      	it	eq
 8001468:	68ec      	ldreq	r4, [r5, #12]
 800146a:	e7da      	b.n	8001422 <_fflush_r+0x22>
 800146c:	080016d8 	.word	0x080016d8
 8001470:	080016f8 	.word	0x080016f8
 8001474:	080016b8 	.word	0x080016b8

08001478 <_lseek_r>:
 8001478:	b538      	push	{r3, r4, r5, lr}
 800147a:	4d07      	ldr	r5, [pc, #28]	; (8001498 <_lseek_r+0x20>)
 800147c:	4604      	mov	r4, r0
 800147e:	4608      	mov	r0, r1
 8001480:	4611      	mov	r1, r2
 8001482:	2200      	movs	r2, #0
 8001484:	602a      	str	r2, [r5, #0]
 8001486:	461a      	mov	r2, r3
 8001488:	f7ff f8cc 	bl	8000624 <_lseek>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_lseek_r+0x1e>
 8001490:	682b      	ldr	r3, [r5, #0]
 8001492:	b103      	cbz	r3, 8001496 <_lseek_r+0x1e>
 8001494:	6023      	str	r3, [r4, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	20000090 	.word	0x20000090

0800149c <__swhatbuf_r>:
 800149c:	b570      	push	{r4, r5, r6, lr}
 800149e:	460e      	mov	r6, r1
 80014a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014a4:	2900      	cmp	r1, #0
 80014a6:	b096      	sub	sp, #88	; 0x58
 80014a8:	4614      	mov	r4, r2
 80014aa:	461d      	mov	r5, r3
 80014ac:	da08      	bge.n	80014c0 <__swhatbuf_r+0x24>
 80014ae:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80014b2:	2200      	movs	r2, #0
 80014b4:	602a      	str	r2, [r5, #0]
 80014b6:	061a      	lsls	r2, r3, #24
 80014b8:	d410      	bmi.n	80014dc <__swhatbuf_r+0x40>
 80014ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014be:	e00e      	b.n	80014de <__swhatbuf_r+0x42>
 80014c0:	466a      	mov	r2, sp
 80014c2:	f000 f8bb 	bl	800163c <_fstat_r>
 80014c6:	2800      	cmp	r0, #0
 80014c8:	dbf1      	blt.n	80014ae <__swhatbuf_r+0x12>
 80014ca:	9a01      	ldr	r2, [sp, #4]
 80014cc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80014d0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80014d4:	425a      	negs	r2, r3
 80014d6:	415a      	adcs	r2, r3
 80014d8:	602a      	str	r2, [r5, #0]
 80014da:	e7ee      	b.n	80014ba <__swhatbuf_r+0x1e>
 80014dc:	2340      	movs	r3, #64	; 0x40
 80014de:	2000      	movs	r0, #0
 80014e0:	6023      	str	r3, [r4, #0]
 80014e2:	b016      	add	sp, #88	; 0x58
 80014e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080014e8 <__smakebuf_r>:
 80014e8:	898b      	ldrh	r3, [r1, #12]
 80014ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80014ec:	079d      	lsls	r5, r3, #30
 80014ee:	4606      	mov	r6, r0
 80014f0:	460c      	mov	r4, r1
 80014f2:	d507      	bpl.n	8001504 <__smakebuf_r+0x1c>
 80014f4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80014f8:	6023      	str	r3, [r4, #0]
 80014fa:	6123      	str	r3, [r4, #16]
 80014fc:	2301      	movs	r3, #1
 80014fe:	6163      	str	r3, [r4, #20]
 8001500:	b002      	add	sp, #8
 8001502:	bd70      	pop	{r4, r5, r6, pc}
 8001504:	ab01      	add	r3, sp, #4
 8001506:	466a      	mov	r2, sp
 8001508:	f7ff ffc8 	bl	800149c <__swhatbuf_r>
 800150c:	9900      	ldr	r1, [sp, #0]
 800150e:	4605      	mov	r5, r0
 8001510:	4630      	mov	r0, r6
 8001512:	f7ff fa57 	bl	80009c4 <_malloc_r>
 8001516:	b948      	cbnz	r0, 800152c <__smakebuf_r+0x44>
 8001518:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800151c:	059a      	lsls	r2, r3, #22
 800151e:	d4ef      	bmi.n	8001500 <__smakebuf_r+0x18>
 8001520:	f023 0303 	bic.w	r3, r3, #3
 8001524:	f043 0302 	orr.w	r3, r3, #2
 8001528:	81a3      	strh	r3, [r4, #12]
 800152a:	e7e3      	b.n	80014f4 <__smakebuf_r+0xc>
 800152c:	4b0d      	ldr	r3, [pc, #52]	; (8001564 <__smakebuf_r+0x7c>)
 800152e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001530:	89a3      	ldrh	r3, [r4, #12]
 8001532:	6020      	str	r0, [r4, #0]
 8001534:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001538:	81a3      	strh	r3, [r4, #12]
 800153a:	9b00      	ldr	r3, [sp, #0]
 800153c:	6163      	str	r3, [r4, #20]
 800153e:	9b01      	ldr	r3, [sp, #4]
 8001540:	6120      	str	r0, [r4, #16]
 8001542:	b15b      	cbz	r3, 800155c <__smakebuf_r+0x74>
 8001544:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001548:	4630      	mov	r0, r6
 800154a:	f000 f889 	bl	8001660 <_isatty_r>
 800154e:	b128      	cbz	r0, 800155c <__smakebuf_r+0x74>
 8001550:	89a3      	ldrh	r3, [r4, #12]
 8001552:	f023 0303 	bic.w	r3, r3, #3
 8001556:	f043 0301 	orr.w	r3, r3, #1
 800155a:	81a3      	strh	r3, [r4, #12]
 800155c:	89a0      	ldrh	r0, [r4, #12]
 800155e:	4305      	orrs	r5, r0
 8001560:	81a5      	strh	r5, [r4, #12]
 8001562:	e7cd      	b.n	8001500 <__smakebuf_r+0x18>
 8001564:	080007dd 	.word	0x080007dd

08001568 <__malloc_lock>:
 8001568:	4801      	ldr	r0, [pc, #4]	; (8001570 <__malloc_lock+0x8>)
 800156a:	f7ff ba09 	b.w	8000980 <__retarget_lock_acquire_recursive>
 800156e:	bf00      	nop
 8001570:	20000084 	.word	0x20000084

08001574 <__malloc_unlock>:
 8001574:	4801      	ldr	r0, [pc, #4]	; (800157c <__malloc_unlock+0x8>)
 8001576:	f7ff ba04 	b.w	8000982 <__retarget_lock_release_recursive>
 800157a:	bf00      	nop
 800157c:	20000084 	.word	0x20000084

08001580 <_free_r>:
 8001580:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001582:	2900      	cmp	r1, #0
 8001584:	d044      	beq.n	8001610 <_free_r+0x90>
 8001586:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800158a:	9001      	str	r0, [sp, #4]
 800158c:	2b00      	cmp	r3, #0
 800158e:	f1a1 0404 	sub.w	r4, r1, #4
 8001592:	bfb8      	it	lt
 8001594:	18e4      	addlt	r4, r4, r3
 8001596:	f7ff ffe7 	bl	8001568 <__malloc_lock>
 800159a:	4a1e      	ldr	r2, [pc, #120]	; (8001614 <_free_r+0x94>)
 800159c:	9801      	ldr	r0, [sp, #4]
 800159e:	6813      	ldr	r3, [r2, #0]
 80015a0:	b933      	cbnz	r3, 80015b0 <_free_r+0x30>
 80015a2:	6063      	str	r3, [r4, #4]
 80015a4:	6014      	str	r4, [r2, #0]
 80015a6:	b003      	add	sp, #12
 80015a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80015ac:	f7ff bfe2 	b.w	8001574 <__malloc_unlock>
 80015b0:	42a3      	cmp	r3, r4
 80015b2:	d908      	bls.n	80015c6 <_free_r+0x46>
 80015b4:	6825      	ldr	r5, [r4, #0]
 80015b6:	1961      	adds	r1, r4, r5
 80015b8:	428b      	cmp	r3, r1
 80015ba:	bf01      	itttt	eq
 80015bc:	6819      	ldreq	r1, [r3, #0]
 80015be:	685b      	ldreq	r3, [r3, #4]
 80015c0:	1949      	addeq	r1, r1, r5
 80015c2:	6021      	streq	r1, [r4, #0]
 80015c4:	e7ed      	b.n	80015a2 <_free_r+0x22>
 80015c6:	461a      	mov	r2, r3
 80015c8:	685b      	ldr	r3, [r3, #4]
 80015ca:	b10b      	cbz	r3, 80015d0 <_free_r+0x50>
 80015cc:	42a3      	cmp	r3, r4
 80015ce:	d9fa      	bls.n	80015c6 <_free_r+0x46>
 80015d0:	6811      	ldr	r1, [r2, #0]
 80015d2:	1855      	adds	r5, r2, r1
 80015d4:	42a5      	cmp	r5, r4
 80015d6:	d10b      	bne.n	80015f0 <_free_r+0x70>
 80015d8:	6824      	ldr	r4, [r4, #0]
 80015da:	4421      	add	r1, r4
 80015dc:	1854      	adds	r4, r2, r1
 80015de:	42a3      	cmp	r3, r4
 80015e0:	6011      	str	r1, [r2, #0]
 80015e2:	d1e0      	bne.n	80015a6 <_free_r+0x26>
 80015e4:	681c      	ldr	r4, [r3, #0]
 80015e6:	685b      	ldr	r3, [r3, #4]
 80015e8:	6053      	str	r3, [r2, #4]
 80015ea:	4421      	add	r1, r4
 80015ec:	6011      	str	r1, [r2, #0]
 80015ee:	e7da      	b.n	80015a6 <_free_r+0x26>
 80015f0:	d902      	bls.n	80015f8 <_free_r+0x78>
 80015f2:	230c      	movs	r3, #12
 80015f4:	6003      	str	r3, [r0, #0]
 80015f6:	e7d6      	b.n	80015a6 <_free_r+0x26>
 80015f8:	6825      	ldr	r5, [r4, #0]
 80015fa:	1961      	adds	r1, r4, r5
 80015fc:	428b      	cmp	r3, r1
 80015fe:	bf04      	itt	eq
 8001600:	6819      	ldreq	r1, [r3, #0]
 8001602:	685b      	ldreq	r3, [r3, #4]
 8001604:	6063      	str	r3, [r4, #4]
 8001606:	bf04      	itt	eq
 8001608:	1949      	addeq	r1, r1, r5
 800160a:	6021      	streq	r1, [r4, #0]
 800160c:	6054      	str	r4, [r2, #4]
 800160e:	e7ca      	b.n	80015a6 <_free_r+0x26>
 8001610:	b003      	add	sp, #12
 8001612:	bd30      	pop	{r4, r5, pc}
 8001614:	20000088 	.word	0x20000088

08001618 <_read_r>:
 8001618:	b538      	push	{r3, r4, r5, lr}
 800161a:	4d07      	ldr	r5, [pc, #28]	; (8001638 <_read_r+0x20>)
 800161c:	4604      	mov	r4, r0
 800161e:	4608      	mov	r0, r1
 8001620:	4611      	mov	r1, r2
 8001622:	2200      	movs	r2, #0
 8001624:	602a      	str	r2, [r5, #0]
 8001626:	461a      	mov	r2, r3
 8001628:	f7fe ff9c 	bl	8000564 <_read>
 800162c:	1c43      	adds	r3, r0, #1
 800162e:	d102      	bne.n	8001636 <_read_r+0x1e>
 8001630:	682b      	ldr	r3, [r5, #0]
 8001632:	b103      	cbz	r3, 8001636 <_read_r+0x1e>
 8001634:	6023      	str	r3, [r4, #0]
 8001636:	bd38      	pop	{r3, r4, r5, pc}
 8001638:	20000090 	.word	0x20000090

0800163c <_fstat_r>:
 800163c:	b538      	push	{r3, r4, r5, lr}
 800163e:	4d07      	ldr	r5, [pc, #28]	; (800165c <_fstat_r+0x20>)
 8001640:	2300      	movs	r3, #0
 8001642:	4604      	mov	r4, r0
 8001644:	4608      	mov	r0, r1
 8001646:	4611      	mov	r1, r2
 8001648:	602b      	str	r3, [r5, #0]
 800164a:	f7fe ffd0 	bl	80005ee <_fstat>
 800164e:	1c43      	adds	r3, r0, #1
 8001650:	d102      	bne.n	8001658 <_fstat_r+0x1c>
 8001652:	682b      	ldr	r3, [r5, #0]
 8001654:	b103      	cbz	r3, 8001658 <_fstat_r+0x1c>
 8001656:	6023      	str	r3, [r4, #0]
 8001658:	bd38      	pop	{r3, r4, r5, pc}
 800165a:	bf00      	nop
 800165c:	20000090 	.word	0x20000090

08001660 <_isatty_r>:
 8001660:	b538      	push	{r3, r4, r5, lr}
 8001662:	4d06      	ldr	r5, [pc, #24]	; (800167c <_isatty_r+0x1c>)
 8001664:	2300      	movs	r3, #0
 8001666:	4604      	mov	r4, r0
 8001668:	4608      	mov	r0, r1
 800166a:	602b      	str	r3, [r5, #0]
 800166c:	f7fe ffcf 	bl	800060e <_isatty>
 8001670:	1c43      	adds	r3, r0, #1
 8001672:	d102      	bne.n	800167a <_isatty_r+0x1a>
 8001674:	682b      	ldr	r3, [r5, #0]
 8001676:	b103      	cbz	r3, 800167a <_isatty_r+0x1a>
 8001678:	6023      	str	r3, [r4, #0]
 800167a:	bd38      	pop	{r3, r4, r5, pc}
 800167c:	20000090 	.word	0x20000090

08001680 <_init>:
 8001680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001682:	bf00      	nop
 8001684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001686:	bc08      	pop	{r3}
 8001688:	469e      	mov	lr, r3
 800168a:	4770      	bx	lr

0800168c <_fini>:
 800168c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800168e:	bf00      	nop
 8001690:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001692:	bc08      	pop	{r3}
 8001694:	469e      	mov	lr, r3
 8001696:	4770      	bx	lr
